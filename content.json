{"meta":{"title":"Wang's Blog","subtitle":"","description":"逝者如斯夫 不舍昼夜","author":"Vincent","url":"http://wzw1016.ml","root":"/"},"pages":[{"title":"about","date":"2020-01-31T14:21:04.000Z","updated":"2020-02-01T15:14:11.496Z","comments":false,"path":"about/index.html","permalink":"http://wzw1016.ml/about/index.html","excerpt":"","text":""},{"title":"tags","date":"2020-01-31T11:18:30.000Z","updated":"2020-02-01T15:13:00.634Z","comments":false,"path":"tags/index.html","permalink":"http://wzw1016.ml/tags/index.html","excerpt":"","text":""},{"title":"categories","date":"2020-01-31T11:25:46.000Z","updated":"2020-02-01T15:12:42.621Z","comments":false,"path":"categories/index.html","permalink":"http://wzw1016.ml/categories/index.html","excerpt":"","text":""},{"title":"","date":"2020-02-03T07:24:56.629Z","updated":"2020-02-03T07:24:56.629Z","comments":true,"path":"lib/needsharebutton/LICENSE.html","permalink":"http://wzw1016.ml/lib/needsharebutton/LICENSE.html","excerpt":"","text":"LicenseThe MIT License (MIT) Copyright © 2015 [Dzmitry Vasileuski] Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the “Software”), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED “AS IS”, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE."},{"title":"","date":"2020-02-03T07:24:56.629Z","updated":"2020-02-03T07:24:56.629Z","comments":true,"path":"lib/needsharebutton/Gruntfile.js","permalink":"http://wzw1016.ml/lib/needsharebutton/Gruntfile.js","excerpt":"","text":"'use strict'; module.exports = function( grunt ) { // tasks grunt.initConfig({ // move JS to dist copy: { main: { files: [ {src: 'src/js/needsharebutton.js', dest: 'dist/needsharebutton.js', filter: 'isFile'} ] } }, // minify JS uglify: { scripts: { files: { 'dist/needsharebutton.min.js': 'dist/needsharebutton.js' } } }, // compile LESS less: { styles: { options: { plugins: [ require('less-plugin-glob') ] }, files: { 'dist/needsharebutton.css': 'src/less/needsharebutton.less' } } }, // autoprefix CSS autoprefixer: { options: { browsers: ['> 1%', 'Android 2', 'last 2 versions', 'Firefox ESR', 'Opera 12.1', 'ie 7', 'ie 8', 'ie 9'] }, no_dest: { src: ['dist/needsharebutton.css', 'dist/needsharebutton.css'] } }, // beautify CSS csscomb: { styles: { options: { config: 'csscomb.json' }, files: { 'dist/needsharebutton.css': 'dist/needsharebutton.css' } } }, // concat and minify CSS cssmin: { styles: { files: { 'dist/needsharebutton.min.css': 'dist/needsharebutton.css' } } }, // watch watch: { scripts: { files: ['src/js/*.js'], tasks: ['copy','uglify'] }, styles: { files: ['src/less/*.less', 'dist/fontello-embedded.css'], tasks: ['less','autoprefixer', 'csscomb', 'cssmin'] } }, // local server connect: { server: { options: { port: 8002 } } } }); // download plugins grunt.loadNpmTasks('grunt-contrib-watch'); grunt.loadNpmTasks('grunt-contrib-copy'); grunt.loadNpmTasks('grunt-contrib-uglify'); grunt.loadNpmTasks('grunt-contrib-less'); grunt.loadNpmTasks('grunt-csscomb'); grunt.loadNpmTasks('grunt-contrib-cssmin'); grunt.loadNpmTasks('grunt-autoprefixer'); grunt.loadNpmTasks('grunt-contrib-connect'); // some default tasks grunt.registerTask('default', ['copy', 'uglify', 'less', 'autoprefixer', 'csscomb', 'cssmin']); grunt.registerTask('server', ['connect', 'watch']); };"},{"title":"","date":"2020-02-03T07:24:56.630Z","updated":"2020-02-03T07:24:56.630Z","comments":true,"path":"lib/needsharebutton/csscomb.json","permalink":"http://wzw1016.ml/lib/needsharebutton/csscomb.json","excerpt":"","text":"{\"exclude\":[\".git/**\",\"node_modules/**\",\"bower_components/**\"],\"always-semicolon\":true,\"block-indent\":\" \",\"color-case\":\"lower\",\"color-shorthand\":true,\"element-case\":\"lower\",\"eof-newline\":true,\"leading-zero\":false,\"quotes\":\"single\",\"remove-empty-rulesets\":true,\"space-after-colon\":\" \",\"space-after-combinator\":\" \",\"space-after-opening-brace\":\"\\n\",\"space-after-selector-delimiter\":\"\\n\",\"space-before-closing-brace\":\"\\n\",\"space-before-colon\":\"\",\"space-before-combinator\":\" \",\"space-before-opening-brace\":\" \",\"space-before-selector-delimiter\":\"\",\"space-between-declarations\":\"\\n\",\"strip-spaces\":true,\"unitless-zero\":true,\"vendor-prefix-align\":true,\"sort-order\":[[\"content\",\"position\",\"z-index\",\"top\",\"right\",\"bottom\",\"left\"],[\"display\",\"visibility\",\"float\",\"clear\",\"overflow\",\"overflow-x\",\"overflow-y\",\"-ms-overflow-x\",\"-ms-overflow-y\",\"clip\",\"zoom\",\"flex-direction\",\"flex-order\",\"flex-pack\",\"flex-align\"],[\"-webkit-box-sizing\",\"-moz-box-sizing\",\"box-sizing\",\"width\",\"min-width\",\"max-width\",\"height\",\"min-height\",\"max-height\",\"margin\",\"margin-top\",\"margin-right\",\"margin-bottom\",\"margin-left\",\"padding\",\"padding-top\",\"padding-right\",\"padding-bottom\",\"padding-left\"],[\"font\",\"font-family\",\"font-size\",\"line-height\",\"font-weight\",\"font-style\",\"color\",\"font-variant\",\"font-size-adjust\",\"font-stretch\",\"font-effect\",\"font-emphasize\",\"font-emphasize-position\",\"font-emphasize-style\",\"font-smooth\"],[\"table-layout\",\"empty-cells\",\"caption-side\",\"border-spacing\",\"border-collapse\",\"list-style\",\"list-style-position\",\"list-style-type\",\"list-style-image\"],[\"quotes\",\"counter-reset\",\"counter-increment\",\"resize\",\"cursor\",\"-webkit-user-select\",\"-moz-user-select\",\"-ms-user-select\",\"user-select\",\"nav-index\",\"nav-up\",\"nav-right\",\"nav-down\",\"nav-left\",\"-webkit-transition\",\"-moz-transition\",\"-ms-transition\",\"-o-transition\",\"transition\",\"-webkit-transition-delay\",\"-moz-transition-delay\",\"-ms-transition-delay\",\"-o-transition-delay\",\"transition-delay\",\"-webkit-transition-timing-function\",\"-moz-transition-timing-function\",\"-ms-transition-timing-function\",\"-o-transition-timing-function\",\"transition-timing-function\",\"-webkit-transition-duration\",\"-moz-transition-duration\",\"-ms-transition-duration\",\"-o-transition-duration\",\"transition-duration\",\"-webkit-transition-property\",\"-moz-transition-property\",\"-ms-transition-property\",\"-o-transition-property\",\"transition-property\",\"-webkit-transform\",\"-moz-transform\",\"-ms-transform\",\"-o-transform\",\"transform\",\"-webkit-transform-origin\",\"-moz-transform-origin\",\"-ms-transform-origin\",\"-o-transform-origin\",\"transform-origin\",\"-webkit-animation\",\"-moz-animation\",\"-ms-animation\",\"-o-animation\",\"animation\",\"-webkit-animation-name\",\"-moz-animation-name\",\"-ms-animation-name\",\"-o-animation-name\",\"animation-name\",\"-webkit-animation-duration\",\"-moz-animation-duration\",\"-ms-animation-duration\",\"-o-animation-duration\",\"animation-duration\",\"-webkit-animation-play-state\",\"-moz-animation-play-state\",\"-ms-animation-play-state\",\"-o-animation-play-state\",\"animation-play-state\",\"-webkit-animation-timing-function\",\"-moz-animation-timing-function\",\"-ms-animation-timing-function\",\"-o-animation-timing-function\",\"animation-timing-function\",\"-webkit-animation-delay\",\"-moz-animation-delay\",\"-ms-animation-delay\",\"-o-animation-delay\",\"animation-delay\",\"-webkit-animation-iteration-count\",\"-moz-animation-iteration-count\",\"-ms-animation-iteration-count\",\"-o-animation-iteration-count\",\"animation-iteration-count\",\"-webkit-animation-direction\",\"-moz-animation-direction\",\"-ms-animation-direction\",\"-o-animation-direction\",\"animation-direction\",\"text-align\",\"-webkit-text-align-last\",\"-moz-text-align-last\",\"-ms-text-align-last\",\"text-align-last\",\"vertical-align\",\"white-space\",\"text-decoration\",\"text-emphasis\",\"text-emphasis-color\",\"text-emphasis-style\",\"text-emphasis-position\",\"text-indent\",\"-ms-text-justify\",\"text-justify\",\"letter-spacing\",\"word-spacing\",\"-ms-writing-mode\",\"text-outline\",\"text-transform\",\"text-wrap\",\"text-overflow\",\"-ms-text-overflow\",\"text-overflow-ellipsis\",\"text-overflow-mode\",\"-ms-word-wrap\",\"word-wrap\",\"word-break\",\"-ms-word-break\",\"-moz-tab-size\",\"-o-tab-size\",\"tab-size\",\"-webkit-hyphens\",\"-moz-hyphens\",\"hyphens\",\"pointer-events\"],[\"opacity\",\"filter:progid:DXImageTransform.Microsoft.Alpha(Opacity\",\"-ms-filter:\\\\'progid:DXImageTransform.Microsoft.Alpha\",\"-ms-interpolation-mode\",\"border\",\"border-width\",\"border-style\",\"border-color\",\"border-top\",\"border-top-width\",\"border-top-style\",\"border-top-color\",\"border-right\",\"border-right-width\",\"border-right-style\",\"border-right-color\",\"border-bottom\",\"border-bottom-width\",\"border-bottom-style\",\"border-bottom-color\",\"border-left\",\"border-left-width\",\"border-left-style\",\"border-left-color\",\"-webkit-border-radius\",\"-moz-border-radius\",\"border-radius\",\"-webkit-border-top-left-radius\",\"-moz-border-radius-topleft\",\"border-top-left-radius\",\"-webkit-border-top-right-radius\",\"-moz-border-radius-topright\",\"border-top-right-radius\",\"-webkit-border-bottom-right-radius\",\"-moz-border-radius-bottomright\",\"border-bottom-right-radius\",\"-webkit-border-bottom-left-radius\",\"-moz-border-radius-bottomleft\",\"border-bottom-left-radius\",\"-webkit-border-image\",\"-moz-border-image\",\"-o-border-image\",\"border-image\",\"-webkit-border-image-source\",\"-moz-border-image-source\",\"-o-border-image-source\",\"border-image-source\",\"-webkit-border-image-slice\",\"-moz-border-image-slice\",\"-o-border-image-slice\",\"border-image-slice\",\"-webkit-border-image-width\",\"-moz-border-image-width\",\"-o-border-image-width\",\"border-image-width\",\"-webkit-border-image-outset\",\"-moz-border-image-outset\",\"-o-border-image-outset\",\"border-image-outset\",\"-webkit-border-image-repeat\",\"-moz-border-image-repeat\",\"-o-border-image-repeat\",\"border-image-repeat\",\"outline\",\"outline-width\",\"outline-style\",\"outline-color\",\"outline-offset\",\"background\",\"filter:progid:DXImageTransform.Microsoft.AlphaImageLoader\",\"background-color\",\"background-image\",\"background-repeat\",\"background-attachment\",\"background-position\",\"background-position-x\",\"-ms-background-position-x\",\"background-position-y\",\"-ms-background-position-y\",\"-webkit-background-clip\",\"-moz-background-clip\",\"background-clip\",\"background-origin\",\"-webkit-background-size\",\"-moz-background-size\",\"-o-background-size\",\"background-size\",\"box-decoration-break\",\"-webkit-box-shadow\",\"-moz-box-shadow\",\"box-shadow\",\"filter:progid:DXImageTransform.Microsoft.gradient\",\"-ms-filter:\\\\'progid:DXImageTransform.Microsoft.gradient\",\"text-shadow\"]]}"},{"title":"","date":"2020-02-03T07:24:56.630Z","updated":"2020-02-03T07:24:56.630Z","comments":true,"path":"lib/needsharebutton/README.html","permalink":"http://wzw1016.ml/lib/needsharebutton/README.html","excerpt":"","text":"update：已加上QQ空间，人人网，豆瓣的支持。 起因本来 V2MM 一直使用 MoreBasicShare 相安无事的，在将 MoreBasicShare 移植到 V2MM 的博客评论系统的时候，发现 MoreBasicShare 有几点缺陷难以移植： 代码结构不好，不方便扩展新的分享方式，其中用了大量的字符串拼接； 依赖 jQuery, 而我们的博客评论系统是不依赖 jQuery 的； 偶然发现一个老外写的纯 Javascript 的 Need Share Button, 效果非常好，于是就 Clone 了过来，扩展了一下，增加了很多国内的分享网站，做得更傻瓜易用了一些。 Demo可以见 V2MM 上的分享按钮，此插件还包含一个 Demo 页面，需把项目 clone 到本地展示。 使用方式有多种方式使用，最简单的方法，加载 js 和 css 后，创建一个 class 名为 need-share-button 的分享按钮就好了，其他什么都不用做。 第一步：在网页里加载 needsharebutton.min.js 和 needsharebutton.min.css。 1234&lt;!-- needsharebutton Javascript file --&gt;&lt;script src&#x3D;&quot;js&#x2F;needsharebutton.min.js&quot;&gt;&lt;&#x2F;script&gt;&lt;!-- needsharebutton CSS file --&gt;&lt;link href&#x3D;&quot;css&#x2F;needsharebutton.min.css&quot; rel&#x3D;&quot;stylesheet&quot; &#x2F;&gt; 第二步：创建一个need-share-button，插件会自动找到所有 need-share-button, 制作成分享按钮。 1&lt;button class&#x3D;&quot;btn btn-default need-share-button&quot;&gt;Share&lt;&#x2F;button&gt; 这样你会看到网页上的 Share Button 已经可以使用了， 还可以通过 data-share- 传参。 第三步：如果需要使用别的名字，可以手动调用 needShareButton 函数，比如： 123new needShareButton(document.getElementById('my-share-button'));# ornew needShareButton('#my-share-button'); needShareButton 函数needShareButton 函数有两个参数： element, 可以是 Dom 节点，也可以是 CSS 选择器; options, 选项； OptionsOptions 可以通过参数传进去，也可以放在 DOM 节点里（加上 data-share- 前缀）。 iconStyle： default or box； boxForm： horizontal or vertical; position: bottomCenter, top / middle / bottom + Left / Center / Right; networks: 默认： &#39;Weibo,Wechat,Douban,QQZone,Twitter,Pinterest,Facebook,GooglePlus,Reddit,Linkedin,Tumblr,Evernote&#39;; 注意，默认没有 RenRen，如果需要分享到人人网，在 networks 参数里加上 RenRen; url: 默认： location.href; title: 默认：document.title; image: 默认从 meta[property=&quot;og:image&quot;] 或 meta[name=&quot;twitter:image&quot;] 取值； description: 默认从 meta[property=&quot;og:description&quot;] 或 meta[name=&quot;twitter:description&quot;] 取值； 感谢感谢DzmVasileusky，此项目基于他的作品改编。"},{"title":"","date":"2020-02-03T07:24:56.639Z","updated":"2020-02-03T07:24:56.639Z","comments":true,"path":"lib/needsharebutton/package.json","permalink":"http://wzw1016.ml/lib/needsharebutton/package.json","excerpt":"","text":"{\"name\":\"needPopup\",\"description\":\"Responsive, easy to use modal windows developed on Javascript with JQuery.\",\"version\":\"1.1.5\",\"main\":\"./Gruntfile.js\",\"devDependencies\":{\"grunt\":\"~0.4.1\",\"grunt-contrib-watch\":\"^0.6.1\",\"grunt-contrib-less\":\"^1.0.1\",\"grunt-csscomb\":\"^3.0.0\",\"grunt-contrib-cssmin\":\"^0.10.0\",\"grunt-contrib-copy\":\"^0.8.0\",\"grunt-contrib-uglify\":\"^0.6.0\",\"grunt-autoprefixer\":\"^1.0.1\",\"less-plugin-glob\":\"^1.1.0\",\"grunt-contrib-connect\":\"^0.9.0\"}}"},{"title":"","date":"2020-02-03T07:24:56.631Z","updated":"2020-02-03T07:24:56.631Z","comments":true,"path":"lib/needsharebutton/demo/index.html","permalink":"http://wzw1016.ml/lib/needsharebutton/demo/index.html","excerpt":"","text":"needShareButton demo body { font: 14px/1 \"Helvetica Neue\",Helvetica,Arial,sans-serif; margin:0; padding:0; background: #DFF4FF; } .wrapper { padding: 100px 60px; text-align: center; } Share button default mode on bottom center Share Share button box mode with chosen networks Share Share button default mode on middle right Share Share button box mode on middle right Share Share button with class name 'need-share-button' Share new needShareButton(document.getElementById('i-share')); new needShareButton(document.getElementById('share-button-2')); new needShareButton(document.getElementById('share-button-3')); new needShareButton(document.getElementById('share-button-4'));"},{"title":"","date":"2020-02-03T07:24:56.637Z","updated":"2020-02-03T07:24:56.637Z","comments":true,"path":"lib/needsharebutton/dist/needsharebutton.css","permalink":"http://wzw1016.ml/lib/needsharebutton/dist/needsharebutton.css","excerpt":"","text":"/*********************************************** needShareButton - Version 1.0.0 - Copyright 2015 Dzmitry Vasileuski - Licensed under MIT (http://opensource.org/licenses/MIT) ***********************************************/ /* Social icons font ***********************************************/ @import url('fontello-embedded.css'); .need-share-button { position: relative; } .need-share-button-opened { position: relative; } .need-share-button-opened img.need-share-wechat-code-image { display: block; max-width: 150px; margin: 5px auto; } .need-share-button_dropdown { position: absolute; z-index: 10; visibility: hidden; overflow: hidden; width: 300px; font-size: 16px; -webkit-transition: .3s; transition: .3s; -webkit-transform: scale(.1); -ms-transform: scale(.1); transform: scale(.1); text-align: center; white-space: normal; opacity: 0; -webkit-border-radius: 4px; border-radius: 4px; background-color: #fff; -webkit-box-shadow: 0 0 2px rgba(0, 0, 0, .5); box-shadow: 0 0 2px rgba(0, 0, 0, .5); } .need-share-button-opened .need-share-button_dropdown { visibility: visible; -webkit-transform: scale(1); -ms-transform: scale(1); transform: scale(1); opacity: 1; } .need-share-button_dropdown-box-vertical, .need-share-button_dropdown-box-horizontal { -webkit-border-radius: 0; border-radius: 0; } .need-share-button_dropdown-box-vertical { width: 50px; } .need-share-button_dropdown-box-horizontal { width: auto; white-space: nowrap; } .need-share-button_link { display: inline-block; width: 50px; height: 50px; line-height: 50px; cursor: pointer; text-align: center; } .need-share-button_link:hover { -webkit-transition: .3s; transition: .3s; opacity: .7; } /* Dropdown position ***********************************************/ .need-share-button_dropdown-top-left { right: 100%; bottom: 100%; margin-right: 10px; margin-bottom: 10px; } .need-share-button_dropdown-top-right { bottom: 100%; left: 100%; margin-bottom: 10px; margin-left: 10px; } .need-share-button_dropdown-top-center { bottom: 100%; left: 50%; margin-bottom: 10px; } .need-share-button_dropdown-middle-left { top: 50%; right: 100%; margin-right: 10px; } .need-share-button_dropdown-middle-right { top: 50%; left: 100%; margin-left: 10px; } .need-share-button_dropdown-bottom-left { top: 100%; right: 100%; margin-top: 10px; margin-right: 10px; } .need-share-button_dropdown-bottom-right { top: 100%; left: 100%; margin-top: 10px; margin-left: 10px; } .need-share-button_dropdown-bottom-center { top: 100%; left: 50%; margin-top: 10px; } /* Default theme ***********************************************/ .need-share-button-default { display: inline-block; margin-bottom: 0; padding: 6px 12px; font-size: 14px; line-height: 1.42857143; font-weight: 400; color: #333; cursor: pointer; -webkit-user-select: none; -moz-user-select: none; -ms-user-select: none; user-select: none; text-align: center; vertical-align: middle; border: 1px solid #ccc; -webkit-border-radius: 4px; border-radius: 4px; background-color: #fff; } /* Network buttons ***********************************************/ .need-share-button_wechat { color: #a2dc30; } .need-share-button_wechat.need-share-button_link-box { color: #fff; background: #a2dc30; } .need-share-button_weibo { color: #d52b2b; } .need-share-button_weibo.need-share-button_link-box { color: #fff; background: #d52b2b; } .need-share-button_douban { color: #072; } .need-share-button_douban:before { content: '豆'; } .need-share-button_douban.need-share-button_link-box { color: #fff; background: #072; } .need-share-button_qqzone { color: #ffce00; } .need-share-button_qqzone:before { content: '\\f1d6'; } .need-share-button_qqzone.need-share-button_link-box { color: #fff; background: #ffce00; } .need-share-button_renren { color: #207cc5; } .need-share-button_renren.need-share-button_link-box { color: #fff; background: #207cc5; } .need-share-button_mailto { color: #efbe00; } .need-share-button_mailto:before { content: '\\e811'; } .need-share-button_mailto.need-share-button_link-box { color: #fff; background: #efbe00; } .need-share-button_twitter { color: #00acec; } .need-share-button_twitter.need-share-button_link-box { color: #fff; background: #00acec; } .need-share-button_pinterest { color: #cd2027; } .need-share-button_pinterest.need-share-button_link-box { color: #fff; background: #cd2027; } .need-share-button_facebook { color: #3b5998; } .need-share-button_facebook.need-share-button_link-box { color: #fff; background: #3b5998; } .need-share-button_googleplus { color: #d44132; } .need-share-button_googleplus.need-share-button_link-box { color: #fff; background: #d44132; } .need-share-button_reddit { color: #000; } .need-share-button_reddit.need-share-button_link-box { color: #fff; background: #000; } .need-share-button_delicious { color: #000; } .need-share-button_delicious.need-share-button_link-box { color: #fff; background: #000; } .need-share-button_tapiture { color: #30547d; } .need-share-button_tapiture.need-share-button_link-box { color: #fff; background: #30547d; } .need-share-button_stumbleupon { color: #f04e23; } .need-share-button_stumbleupon.need-share-button_link-box { color: #fff; background: #f04e23; } .need-share-button_linkedin { color: #0085af; } .need-share-button_linkedin.need-share-button_link-box { color: #fff; background: #0085af; } .need-share-button_slashdot { color: #026664; } .need-share-button_slashdot.need-share-button_link-box { color: #fff; background: #026664; } .need-share-button_technorati { color: #49ae47; } .need-share-button_technorati.need-share-button_link-box { color: #fff; background: #49ae47; } .need-share-button_posterous { color: #795d31; } .need-share-button_posterous.need-share-button_link-box { color: #fff; background: #795d31; } .need-share-button_tumblr { color: #34465d; } .need-share-button_tumblr.need-share-button_link-box { color: #fff; background: #34465d; } .need-share-button_googlebookmarks { color: #fde331; } .need-share-button_googlebookmarks.need-share-button_link-box { color: #fff; background: #fde331; } .need-share-button_newsvine { color: #03652c; } .need-share-button_newsvine.need-share-button_link-box { color: #fff; background: #03652c; } .need-share-button_pingfm { color: #94b5da; } .need-share-button_pingfm.need-share-button_link-box { color: #fff; background: #94b5da; } .need-share-button_evernote { color: #79d626; } .need-share-button_evernote.need-share-button_link-box { color: #fff; background: #79d626; } .need-share-button_friendfeed { color: #b0cbe9; } .need-share-button_friendfeed.need-share-button_link-box { color: #fff; background: #b0cbe9; } .need-share-button_vkontakte { color: #4c75a3; } .need-share-button_vkontakte.need-share-button_link-box { color: #fff; background: #4c75a3; } .need-share-button_odnoklassniki { color: #ed812b; } .need-share-button_odnoklassniki.need-share-button_link-box { color: #fff; background: #ed812b; } .need-share-button_mailru { color: #f89c0e; } .need-share-button_mailru.need-share-button_link-box { color: #fff; background: #f89c0e; }"},{"title":"","date":"2020-02-03T07:24:56.638Z","updated":"2020-02-03T07:24:56.638Z","comments":true,"path":"lib/needsharebutton/dist/needsharebutton.js","permalink":"http://wzw1016.ml/lib/needsharebutton/dist/needsharebutton.js","excerpt":"","text":"/*********************************************** needShareButton - Version 1.0.0 - Copyright 2015 Dzmitry Vasileuski - Licensed under MIT (http://opensource.org/licenses/MIT) ***********************************************/ (function() { // find closest function closest(elem, parent) { if (typeof(parent) == 'string') { var matchesSelector = elem.matches || elem.webkitMatchesSelector || elem.mozMatchesSelector || elem.msMatchesSelector; if (!!matchesSelector) { while (elem) { if (matchesSelector.bind(elem)(parent)) { return elem; } else { elem = elem.parentElement; } } } return false; } else { while (elem) { if (elem == parent) { return elem; } else { elem = elem.parentElement; } } return false; } } // share button class window.needShareButton = function(elem, options) { // create element reference var root = this; root.elem = elem || 'need-share-button'; /* Helpers ***********************************************/ // get title from html root.getTitle = function() { var content; // check querySelector existance for old browsers if (document.querySelector) { if (content = document.querySelector('title')){ return content.innerText; } } return document.title; }; // get image from html root.getImage = function() { var content; // check querySelector existance for old browsers if (document.querySelector) { if (content = document.querySelector('meta[property=\"og:image\"]') || document.querySelector('meta[name=\"twitter:image\"]')) { return content.getAttribute('content'); } else return ''; } else return ''; }; // get description from html root.getDescription = function() { var content; // check querySelector existance for old browsers if (document.querySelector) { if (content = document.querySelector('meta[property=\"og:description\"]') || document.querySelector('meta[name=\"twitter:description\"]') || document.querySelector('meta[name=\"description\"]')) { return content.getAttribute('content'); } else return ''; } else { if (content = document.getElementsByTagName('meta').namedItem('description')) return content.getAttribute('content'); else return ''; } }; // share urls for all networks root.share = { 'weibo': function (el) { var myoptions = getOptions(el); var url = 'http://v.t.sina.com.cn/share/share.php?title=' + encodeURIComponent(myoptions.title) + \"&url=\"+encodeURIComponent(myoptions.url) + \"&pic=\"+encodeURIComponent(myoptions.image); root.popup(url); }, 'wechat': function (el) { var myoptions = getOptions(el); var imgSrc = 'https://api.qrserver.com/v1/create-qr-code/?size=150x150&data='+encodeURIComponent(myoptions.url); var dropdownEl = el.querySelector('.need-share-button_dropdown'); var img = dropdownEl.getElementsByClassName('need-share-wechat-code-image')[0]; if (img) { img.remove(); } else { img = document.createElement('img'); img.src = imgSrc; img.alt = 'loading wechat image...'; img.setAttribute(\"class\",'need-share-wechat-code-image'); dropdownEl.appendChild(img); } }, 'douban': function (el) { var myoptions = getOptions(el); var url = 'https://www.douban.com/share/service?name=' + encodeURIComponent(myoptions.title) + \"&href=\"+encodeURIComponent(myoptions.url) + \"&image=\"+encodeURIComponent(myoptions.image); root.popup(url); }, 'qqzone': function (el) { var myoptions = getOptions(el); var url = 'http://sns.qzone.qq.com/cgi-bin/qzshare/cgi_qzshare_onekey?title=' + encodeURIComponent(myoptions.title) + \"&url=\"+encodeURIComponent(myoptions.url) + \"&pics=\"+encodeURIComponent(myoptions.image) + \"&desc=\"+ encodeURIComponent(myoptions.description); root.popup(url); }, 'renren': function (el) { var myoptions = getOptions(el); var url = 'http://widget.renren.com/dialog/share?title=' + encodeURIComponent(myoptions.title) + \"&resourceUrl=\"+encodeURIComponent(myoptions.url) + \"&pic=\"+encodeURIComponent(myoptions.image) + \"&description=\"+ encodeURIComponent(myoptions.description); root.popup(url); }, 'mailto' : function(el) { var myoptions = getOptions(el); var url = 'mailto:?subject=' + encodeURIComponent(myoptions.title) + '&body=Thought you might enjoy reading this: ' + encodeURIComponent(myoptions.url) + ' - ' + encodeURIComponent(myoptions.description); window.location.href = url; }, 'twitter' : function(el) { var myoptions = getOptions(el); var url = myoptions.protocol + 'twitter.com/intent/tweet?text='; url += encodeURIComponent(myoptions.title) + \"&url=\" + encodeURIComponent(myoptions.url); root.popup(url); }, 'pinterest' : function(el) { var myoptions = getOptions(el); var url = myoptions.protocol + 'pinterest.com/pin/create/bookmarklet/?is_video=false'; url += '&media=' + encodeURIComponent(myoptions.image); url += '&url=' + encodeURIComponent(myoptions.url); url += '&description=' + encodeURIComponent(myoptions.title); root.popup(url); }, 'facebook' : function(el) { var myoptions = getOptions(el); var url = myoptions.protocol + 'www.facebook.com/share.php?'; url += 'u=' + encodeURIComponent(myoptions.url); url += '&title=' + encodeURIComponent(myoptions.title); root.popup(url); }, 'googleplus' : function(el) { var myoptions = getOptions(el); var url = myoptions.protocol + 'plus.google.com/share?'; url += 'url=' + encodeURIComponent(myoptions.url); root.popup(url); }, 'reddit' : function(el) { var myoptions = getOptions(el); var url = myoptions.protocol + 'www.reddit.com/submit?'; url += 'url=' + encodeURIComponent(myoptions.url); url += '&title=' + encodeURIComponent(myoptions.title); root.popup(url); }, 'delicious' : function(el) { var myoptions = getOptions(el); var url = myoptions.protocol + 'del.icio.us/post?'; url += 'url=' + encodeURIComponent(myoptions.url); url += '&title=' + encodeURIComponent(myoptions.title); url += '&notes=' + encodeURIComponent(myoptions.description); root.popup(url); }, // 'tapiture' : function(el) { // var myoptions = getOptions(el); // var url = myoptions.protocol + 'tapiture.com/bookmarklet/image?'; // url += 'img_src=' + encodeURIComponent(myoptions.image); // url += '&page_url=' + encodeURIComponent(myoptions.url); // url += '&page_title=' + encodeURIComponent(myoptions.title); // // root.popup(url); // }, 'stumbleupon' : function(el) { var myoptions = getOptions(el); var url = myoptions.protocol + 'www.stumbleupon.com/submit?'; url += 'url=' + encodeURIComponent(myoptions.url); url += '&title=' + encodeURIComponent(myoptions.title); root.popup(url); }, 'linkedin' : function(el) { var myoptions = getOptions(el); var url = myoptions.protocol + 'www.linkedin.com/shareArticle?mini=true'; url += '&url=' + encodeURIComponent(myoptions.url); url += '&title=' + encodeURIComponent(myoptions.title); url += '&source=' + encodeURIComponent(myoptions.source); root.popup(url); }, // 'slashdot' : function(el) { // var myoptions = getOptions(el); // var url = myoptions.protocol + 'slashdot.org/bookmark.pl?'; // url += 'url=' + encodeURIComponent(myoptions.url); // url += '&title=' + encodeURIComponent(myoptions.title); // // root.popup(url); // }, // 'technorati' : function(el) { // var myoptions = getOptions(el); // var url = myoptions.protocol + 'technorati.com/faves?'; // url += 'add=' + encodeURIComponent(myoptions.url); // url += '&title=' + encodeURIComponent(myoptions.title); // // root.popup(url); // }, 'posterous' : function(el) { var myoptions = getOptions(el); var url = myoptions.protocol + 'posterous.com/share?'; url += 'linkto=' + encodeURIComponent(myoptions.url); root.popup(url); }, 'tumblr' : function(el) { var myoptions = getOptions(el); var url = myoptions.protocol + 'www.tumblr.com/share?v=3'; url += '&u=' + encodeURIComponent(myoptions.url); url += '&t=' + encodeURIComponent(myoptions.title); root.popup(url); }, // 'googlebookmarks' : function(el) { // var myoptions = getOptions(el); // var url = myoptions.protocol + 'www.google.com/bookmarks/mark?op=edit'; // url += '&bkmk=' + encodeURIComponent(myoptions.url); // url += '&title=' + encodeURIComponent(myoptions.title); // url += '&annotation=' + encodeURIComponent(myoptions.description); // // root.popup(url); // }, // 'newsvine' : function(el) { // var myoptions = getOptions(el); // var url = myoptions.protocol + 'www.newsvine.com/_tools/seed&save?'; // url += 'u=' + encodeURIComponent(myoptions.url); // url += '&h=' + encodeURIComponent(myoptions.title); // // root.popup(url); // }, // 'pingfm' : function(el) { // var myoptions = getOptions(el); // var url = myoptions.protocol + 'ping.fm/ref/?'; // url += 'link=' + encodeURIComponent(myoptions.url); // url += '&title=' + encodeURIComponent(myoptions.title); // url += '&body=' + encodeURIComponent(myoptions.description); // // root.popup(url); // }, 'evernote' : function(el) { var myoptions = getOptions(el); var url = myoptions.protocol + 'www.evernote.com/clip.action?'; url += 'url=' + encodeURIComponent(myoptions.url); url += '&title=' + encodeURIComponent(myoptions.title); root.popup(url); }, 'friendfeed' : function(el) { var myoptions = getOptions(el); var url = myoptions.protocol + 'www.friendfeed.com/share?'; url += 'url=' + encodeURIComponent(myoptions.url); url += '&title=' + encodeURIComponent(myoptions.title); root.popup(url); }, 'vkontakte' : function(el) { var myoptions = getOptions(el); var url = myoptions.protocol + 'vkontakte.ru/share.php?'; url += 'url=' + encodeURIComponent(myoptions.url); url += '&title=' + encodeURIComponent(myoptions.title); url += '&description=' + encodeURIComponent(myoptions.description); url += '&image=' + encodeURIComponent(myoptions.image); url += '&noparse=true'; root.popup(url); }, 'odnoklassniki' : function(el) { var myoptions = getOptions(el); var url = myoptions.protocol + 'www.odnoklassniki.ru/dk?st.cmd=addShare&st.s=1'; url += '&st.comments=' + encodeURIComponent(myoptions.description); url += '&st._surl=' + encodeURIComponent(myoptions.url); root.popup(url); }, // 'mailru' : function(el) { // var myoptions = getOptions(el); // var url = myoptions.protocol + 'connect.mail.ru/share?'; // url += 'url=' + encodeURIComponent(myoptions.url); // url += '&title=' + encodeURIComponent(myoptions.title); // url += '&description=' + encodeURIComponent(myoptions.description); // url += '&imageurl=' + encodeURIComponent(myoptions.image); // // root.popup(url); // } } // open share link in a popup root.popup = function(url) { // set left and top position var popupWidth = 600, popupHeight = 500, // fix dual screen mode dualScreenLeft = window.screenLeft != undefined ? window.screenLeft : screen.left, dualScreenTop = window.screenTop != undefined ? window.screenTop : screen.top, width = window.innerWidth ? window.innerWidth : document.documentElement.clientWidth ? document.documentElement.clientWidth : screen.width, height = window.innerHeight ? window.innerHeight : document.documentElement.clientHeight ? document.documentElement.clientHeight : screen.height, // calculate top and left position left = ((width / 2) - (popupWidth / 2)) + dualScreenLeft, top = ((height / 2) - (popupHeight / 2)) + dualScreenTop, // show popup shareWindow = window.open(url,'targetWindow','toolbar=no,location=no,status=no,menubar=no,scrollbars=yes,resizable=yes,width=' + popupWidth + ', height=' + popupHeight + ', top=' + top + ', left=' + left); // Puts focus on the newWindow if (window.focus) { shareWindow.focus(); } } /* Set options ***********************************************/ // create default options root.options = { iconStyle: 'default', // default or box boxForm: 'horizontal', // horizontal or vertical position: 'bottomCenter', // top / middle / bottom + Left / Center / Right protocol: ['http', 'https'].indexOf(window.location.href.split(':')[0]) === -1 ? 'https://' : '//', networks: 'Weibo,Wechat,Douban,QQZone,Twitter,Pinterest,Facebook,GooglePlus,Reddit,Linkedin,Tumblr,Mailto' }; // integrate custom options for (var i in options) { root.options[i] = options[i]; } // convert networks string into array root.options.networks = root.options.networks.toLowerCase().split(','); function getOptions(el) { // integrate data attribute options var ret = {}; for (var i in root.options) { ret[i] = root.options[i]; } // these attrs must get dynamically. ret.url = window.location.href; ret.title = root.getTitle(); ret.image = root.getImage(); ret.description = root.getDescription(); for (var option in el.dataset) { // replace only 'share-' prefixed data-attributes if (option.match(/share/)) { var new_option = option.replace(/share/, ''); if (!new_option.length) { continue; } new_option = new_option.charAt(0).toLowerCase() + new_option.slice(1); var val = el.dataset[option]; if (new_option === 'networks') { val = val.toLowerCase().split(','); } else if (new_option === 'url' && val && val[0] === '/') { // fix relative url problem. val = location.origin + val; } ret[new_option] = val; } } return ret; } function createDropdown(el) { // create dropdown var dropdownEl = document.createElement('span'); dropdownEl.className = 'need-share-button_dropdown'; if (el.querySelector('.need-share-button_dropdown')) { return; } var myoptions = getOptions(el); // set dropdown row length if (myoptions.iconStyle == 'box' && myoptions.boxForm == 'horizontal') dropdownEl.className += ' need-share-button_dropdown-box-horizontal'; else if (myoptions.iconStyle == 'box' && myoptions.boxForm == 'vertical') dropdownEl.className += ' need-share-button_dropdown-box-vertical'; // set dropdown position setTimeout(function() { switch (myoptions.position) { case 'topLeft': dropdownEl.className += ' need-share-button_dropdown-top-left'; break case 'topRight': dropdownEl.className += ' need-share-button_dropdown-top-right'; break case 'topCenter': dropdownEl.className += ' need-share-button_dropdown-top-center'; dropdownEl.style.marginLeft = - dropdownEl.offsetWidth / 2 + 'px'; break case 'middleLeft': dropdownEl.className += ' need-share-button_dropdown-middle-left'; dropdownEl.style.marginTop = - dropdownEl.offsetHeight / 2 + 'px'; break case 'middleRight': dropdownEl.className += ' need-share-button_dropdown-middle-right'; dropdownEl.style.marginTop = - dropdownEl.offsetHeight / 2 + 'px'; break case 'bottomLeft': dropdownEl.className += ' need-share-button_dropdown-bottom-left'; break case 'bottomRight': dropdownEl.className += ' need-share-button_dropdown-bottom-right'; break case 'bottomCenter': dropdownEl.className += ' need-share-button_dropdown-bottom-center'; dropdownEl.style.marginLeft = - dropdownEl.offsetWidth / 2 + 'px'; break default: dropdownEl.className += ' need-share-button_dropdown-bottom-center'; dropdownEl.style.marginLeft = - dropdownEl.offsetWidth / 2 + 'px'; break } },1); // fill fropdown with buttons var iconClass = myoptions.iconStyle == 'default' ? 'need-share-button_link need-share-button_' : 'need-share-button_link-' + myoptions.iconStyle + ' need-share-button_link need-share-button_'; for (var network in myoptions.networks) { var link = document.createElement('span'); network = myoptions.networks[network]; link.className = iconClass + network; link.className += ' icon-' + network; link.dataset.network = network; link.title = network; dropdownEl.appendChild(link); } dropdownEl.addEventListener('click', function (event) { if (closest(event.target, '.need-share-button_link')) { event.preventDefault(); event.stopPropagation(); root.share[event.target.dataset.network](el); return false; } }); el.appendChild(dropdownEl); } // close on click outside document.addEventListener('click', function(event) { var openedEl = document.querySelector('.need-share-button-opened'); if (!closest(event.target, '.need-share-button-opened')) { if (openedEl) { openedEl.classList.remove('need-share-button-opened'); // hide wechat code image when close the dropdown. if (openedEl.querySelector('.need-share-wechat-code-image')) { openedEl.querySelector('.need-share-wechat-code-image').remove(); } } else { var el = closest(event.target, root.elem); if (el) { if (!el.classList.contains('need-share-button-opened')) { createDropdown(el); setTimeout(function () { el.classList.add('need-share-button-opened'); }, 1); } } } } }); }; new needShareButton('.need-share-button'); })();"},{"title":"","date":"2020-02-03T07:24:56.639Z","updated":"2020-02-03T07:24:56.639Z","comments":true,"path":"lib/needsharebutton/dist/needsharebutton.min.js","permalink":"http://wzw1016.ml/lib/needsharebutton/dist/needsharebutton.min.js","excerpt":"","text":"!function(){function a(a,b){if(\"string\"==typeof b){var c=a.matches||a.webkitMatchesSelector||a.mozMatchesSelector||a.msMatchesSelector;if(c)for(;a;){if(c.bind(a)(b))return a;a=a.parentElement}return!1}for(;a;){if(a==b)return a;a=a.parentElement}return!1}window.needShareButton=function(b,c){function d(a){var b={};for(var c in f.options)b[c]=f.options[c];b.url=window.location.href,b.title=f.getTitle(),b.image=f.getImage(),b.description=f.getDescription();for(var d in a.dataset)if(d.match(/share/)){var e=d.replace(/share/,\"\");if(!e.length)continue;e=e.charAt(0).toLowerCase()+e.slice(1);var g=a.dataset[d];\"networks\"===e?g=g.toLowerCase().split(\",\"):\"url\"===e&&g&&\"/\"===g[0]&&(g=location.origin+g),b[e]=g}return b}function e(b){var c=document.createElement(\"span\");if(c.className=\"need-share-button_dropdown\",!b.querySelector(\".need-share-button_dropdown\")){var e=d(b);\"box\"==e.iconStyle&&\"horizontal\"==e.boxForm?c.className+=\" need-share-button_dropdown-box-horizontal\":\"box\"==e.iconStyle&&\"vertical\"==e.boxForm&&(c.className+=\" need-share-button_dropdown-box-vertical\"),setTimeout(function(){switch(e.position){case\"topLeft\":c.className+=\" need-share-button_dropdown-top-left\";break;case\"topRight\":c.className+=\" need-share-button_dropdown-top-right\";break;case\"topCenter\":c.className+=\" need-share-button_dropdown-top-center\",c.style.marginLeft=-c.offsetWidth/2+\"px\";break;case\"middleLeft\":c.className+=\" need-share-button_dropdown-middle-left\",c.style.marginTop=-c.offsetHeight/2+\"px\";break;case\"middleRight\":c.className+=\" need-share-button_dropdown-middle-right\",c.style.marginTop=-c.offsetHeight/2+\"px\";break;case\"bottomLeft\":c.className+=\" need-share-button_dropdown-bottom-left\";break;case\"bottomRight\":c.className+=\" need-share-button_dropdown-bottom-right\";break;case\"bottomCenter\":default:c.className+=\" need-share-button_dropdown-bottom-center\",c.style.marginLeft=-c.offsetWidth/2+\"px\"}},1);var g=\"default\"==e.iconStyle?\"need-share-button_link need-share-button_\":\"need-share-button_link-\"+e.iconStyle+\" need-share-button_link need-share-button_\";for(var h in e.networks){var i=document.createElement(\"span\");h=e.networks[h],i.className=g+h,i.className+=\" icon-\"+h,i.dataset.network=h,i.title=h,c.appendChild(i)}c.addEventListener(\"click\",function(c){if(a(c.target,\".need-share-button_link\"))return c.preventDefault(),c.stopPropagation(),f.share[c.target.dataset.network](b),!1}),b.appendChild(c)}}var f=this;f.elem=b||\"need-share-button\",f.getTitle=function(){var a;return document.querySelector&&(a=document.querySelector(\"title\"))?a.innerText:document.title},f.getImage=function(){var a;return document.querySelector&&(a=document.querySelector('meta[property=\"og:image\"]')||document.querySelector('meta[name=\"twitter:image\"]'))?a.getAttribute(\"content\"):\"\"},f.getDescription=function(){var a;return document.querySelector?(a=document.querySelector('meta[property=\"og:description\"]')||document.querySelector('meta[name=\"twitter:description\"]')||document.querySelector('meta[name=\"description\"]'))?a.getAttribute(\"content\"):\"\":(a=document.getElementsByTagName(\"meta\").namedItem(\"description\"))?a.getAttribute(\"content\"):\"\"},f.share={weibo:function(a){var b=d(a),c=\"http://v.t.sina.com.cn/share/share.php?title=\"+encodeURIComponent(b.title)+\"&url=\"+encodeURIComponent(b.url)+\"&pic=\"+encodeURIComponent(b.image);f.popup(c)},wechat:function(a){var b=d(a),c=\"https://api.qrserver.com/v1/create-qr-code/?size=150x150&data=\"+encodeURIComponent(b.url),e=a.querySelector(\".need-share-button_dropdown\"),f=e.getElementsByClassName(\"need-share-wechat-code-image\")[0];f?f.remove():(f=document.createElement(\"img\"),f.src=c,f.alt=\"loading wechat image...\",f.setAttribute(\"class\",\"need-share-wechat-code-image\"),e.appendChild(f))},douban:function(a){var b=d(a),c=\"https://www.douban.com/share/service?name=\"+encodeURIComponent(b.title)+\"&href=\"+encodeURIComponent(b.url)+\"&image=\"+encodeURIComponent(b.image);f.popup(c)},qqzone:function(a){var b=d(a),c=\"http://sns.qzone.qq.com/cgi-bin/qzshare/cgi_qzshare_onekey?title=\"+encodeURIComponent(b.title)+\"&url=\"+encodeURIComponent(b.url)+\"&pics=\"+encodeURIComponent(b.image)+\"&desc=\"+encodeURIComponent(b.description);f.popup(c)},renren:function(a){var b=d(a),c=\"http://widget.renren.com/dialog/share?title=\"+encodeURIComponent(b.title)+\"&resourceUrl=\"+encodeURIComponent(b.url)+\"&pic=\"+encodeURIComponent(b.image)+\"&description=\"+encodeURIComponent(b.description);f.popup(c)},mailto:function(a){var b=d(a),c=\"mailto:?subject=\"+encodeURIComponent(b.title)+\"&body=Thought you might enjoy reading this: \"+encodeURIComponent(b.url)+\" - \"+encodeURIComponent(b.description);window.location.href=c},twitter:function(a){var b=d(a),c=b.protocol+\"twitter.com/intent/tweet?text=\";c+=encodeURIComponent(b.title)+\"&url=\"+encodeURIComponent(b.url),f.popup(c)},pinterest:function(a){var b=d(a),c=b.protocol+\"pinterest.com/pin/create/bookmarklet/?is_video=false\";c+=\"&media=\"+encodeURIComponent(b.image),c+=\"&url=\"+encodeURIComponent(b.url),c+=\"&description=\"+encodeURIComponent(b.title),f.popup(c)},facebook:function(a){var b=d(a),c=b.protocol+\"www.facebook.com/share.php?\";c+=\"u=\"+encodeURIComponent(b.url),c+=\"&title=\"+encodeURIComponent(b.title),f.popup(c)},googleplus:function(a){var b=d(a),c=b.protocol+\"plus.google.com/share?\";c+=\"url=\"+encodeURIComponent(b.url),f.popup(c)},reddit:function(a){var b=d(a),c=b.protocol+\"www.reddit.com/submit?\";c+=\"url=\"+encodeURIComponent(b.url),c+=\"&title=\"+encodeURIComponent(b.title),f.popup(c)},delicious:function(a){var b=d(a),c=b.protocol+\"del.icio.us/post?\";c+=\"url=\"+encodeURIComponent(b.url),c+=\"&title=\"+encodeURIComponent(b.title),c+=\"&notes=\"+encodeURIComponent(b.description),f.popup(c)},stumbleupon:function(a){var b=d(a),c=b.protocol+\"www.stumbleupon.com/submit?\";c+=\"url=\"+encodeURIComponent(b.url),c+=\"&title=\"+encodeURIComponent(b.title),f.popup(c)},linkedin:function(a){var b=d(a),c=b.protocol+\"www.linkedin.com/shareArticle?mini=true\";c+=\"&url=\"+encodeURIComponent(b.url),c+=\"&title=\"+encodeURIComponent(b.title),c+=\"&source=\"+encodeURIComponent(b.source),f.popup(c)},posterous:function(a){var b=d(a),c=b.protocol+\"posterous.com/share?\";c+=\"linkto=\"+encodeURIComponent(b.url),f.popup(c)},tumblr:function(a){var b=d(a),c=b.protocol+\"www.tumblr.com/share?v=3\";c+=\"&u=\"+encodeURIComponent(b.url),c+=\"&t=\"+encodeURIComponent(b.title),f.popup(c)},evernote:function(a){var b=d(a),c=b.protocol+\"www.evernote.com/clip.action?\";c+=\"url=\"+encodeURIComponent(b.url),c+=\"&title=\"+encodeURIComponent(b.title),f.popup(c)},friendfeed:function(a){var b=d(a),c=b.protocol+\"www.friendfeed.com/share?\";c+=\"url=\"+encodeURIComponent(b.url),c+=\"&title=\"+encodeURIComponent(b.title),f.popup(c)},vkontakte:function(a){var b=d(a),c=b.protocol+\"vkontakte.ru/share.php?\";c+=\"url=\"+encodeURIComponent(b.url),c+=\"&title=\"+encodeURIComponent(b.title),c+=\"&description=\"+encodeURIComponent(b.description),c+=\"&image=\"+encodeURIComponent(b.image),c+=\"&noparse=true\",f.popup(c)},odnoklassniki:function(a){var b=d(a),c=b.protocol+\"www.odnoklassniki.ru/dk?st.cmd=addShare&st.s=1\";c+=\"&st.comments=\"+encodeURIComponent(b.description),c+=\"&st._surl=\"+encodeURIComponent(b.url),f.popup(c)}},f.popup=function(a){var b=600,c=500,d=void 0!=window.screenLeft?window.screenLeft:screen.left,e=void 0!=window.screenTop?window.screenTop:screen.top,f=window.innerWidth?window.innerWidth:document.documentElement.clientWidth?document.documentElement.clientWidth:screen.width,g=window.innerHeight?window.innerHeight:document.documentElement.clientHeight?document.documentElement.clientHeight:screen.height,h=f/2-b/2+d,i=g/2-c/2+e,j=window.open(a,\"targetWindow\",\"toolbar=no,location=no,status=no,menubar=no,scrollbars=yes,resizable=yes,width=\"+b+\", height=\"+c+\", top=\"+i+\", left=\"+h);window.focus&&j.focus()},f.options={iconStyle:\"default\",boxForm:\"horizontal\",position:\"bottomCenter\",protocol:-1===[\"http\",\"https\"].indexOf(window.location.href.split(\":\")[0])?\"https://\":\"//\",networks:\"Weibo,Wechat,Douban,QQZone,Twitter,Pinterest,Facebook,GooglePlus,Reddit,Linkedin,Tumblr,Mailto\"};for(var g in c)f.options[g]=c[g];f.options.networks=f.options.networks.toLowerCase().split(\",\"),document.addEventListener(\"click\",function(b){var c=document.querySelector(\".need-share-button-opened\");if(!a(b.target,\".need-share-button-opened\"))if(c)c.classList.remove(\"need-share-button-opened\"),c.querySelector(\".need-share-wechat-code-image\")&&c.querySelector(\".need-share-wechat-code-image\").remove();else{var d=a(b.target,f.elem);d&&(d.classList.contains(\"need-share-button-opened\")||(e(d),setTimeout(function(){d.classList.add(\"need-share-button-opened\")},1)))}})},new needShareButton(\".need-share-button\")}();"},{"title":"","date":"2020-02-03T07:24:56.638Z","updated":"2020-02-03T07:24:56.638Z","comments":true,"path":"lib/needsharebutton/dist/needsharebutton.min.css","permalink":"http://wzw1016.ml/lib/needsharebutton/dist/needsharebutton.min.css","excerpt":"","text":"@font-face{font-family:fontello-nms;src:url(font/fontello.eot?14876200);src:url(font/fontello.eot?14876200#iefix) format('embedded-opentype'),url(font/fontello.svg?14876200#fontello) format('svg');font-weight:400;font-style:normal}@font-face{font-family:fontello-nms;src:url(data:application/octet-stream;base64,) format('woff'),url(data:application/octet-stream;base64,) format('truetype')}.need-share-button_dropdown [class*=\" icon-\"]:before,.need-share-button_dropdown [class^=icon-]:before{font-family:fontello-nms;font-style:normal;font-weight:400;speak:none;display:inline-block;text-decoration:inherit;width:1em;margin-right:.2em;text-align:center;font-variant:normal;text-transform:none;line-height:1em;margin-left:.2em}.need-share-button_dropdown .icon-ok:before{content:'\\e800'}.need-share-button_dropdown .icon-heart:before{content:'\\e801'}.need-share-button_dropdown .icon-thumbs-up:before{content:'\\e802'}.need-share-button_dropdown .icon-thumbs-down:before{content:'\\e803'}.need-share-button_dropdown .icon-heart-empty:before{content:'\\e804'}.need-share-button_dropdown .icon-star:before{content:'\\e805'}.need-share-button_dropdown .icon-star-empty:before{content:'\\e806'}.need-share-button_dropdown .icon-up-open:before{content:'\\e807'}.need-share-button_dropdown .icon-down-open:before{content:'\\e808'}.need-share-button_dropdown .icon-forward:before{content:'\\e809'}.need-share-button_dropdown .icon-bookmark:before{content:'\\e80a'}.need-share-button_dropdown .icon-path:before{content:'\\e80b'}.need-share-button_dropdown .icon-reddit:before{content:'\\e80c'}.need-share-button_dropdown .icon-googleplus:before{content:'\\e80e'}.need-share-button_dropdown .icon-posterous:before{content:'\\e80f'}.need-share-button_dropdown .icon-bookmark-1:before{content:'\\e810'}.need-share-button_dropdown .icon-mail:before{content:'\\e811'}.need-share-button_dropdown .icon-bookmark-empty:before{content:'\\f097'}.need-share-button_dropdown .icon-twitter:before{content:'\\f099'}.need-share-button_dropdown .icon-facebook:before{content:'\\f09a'}.need-share-button_dropdown .icon-rss:before{content:'\\f09e'}.need-share-button_dropdown .icon-gplus:before{content:'\\f0d5'}.need-share-button_dropdown .icon-linkedin:before{content:'\\f0e1'}.need-share-button_dropdown .icon-quote-left:before{content:'\\f10d'}.need-share-button_dropdown .icon-quote-right:before{content:'\\f10e'}.need-share-button_dropdown .icon-reply:before{content:'\\f112'}.need-share-button_dropdown .icon-reply-all:before{content:'\\f122'}.need-share-button_dropdown .icon-thumbs-up-alt:before{content:'\\f164'}.need-share-button_dropdown .icon-thumbs-down-alt:before{content:'\\f165'}.need-share-button_dropdown .icon-tumblr:before{content:'\\f173'}.need-share-button_dropdown .icon-vkontakte:before{content:'\\f189'}.need-share-button_dropdown .icon-weibo:before{content:'\\f18a'}.need-share-button_dropdown .icon-renren:before{content:'\\f18b'}.need-share-button_dropdown .icon-stumbleupon:before{content:'\\f1a4'}.need-share-button_dropdown .icon-delicious:before{content:'\\f1a5'}.need-share-button_dropdown .icon-qq:before{content:'\\f1d6'}.need-share-button_dropdown .icon-wechat:before{content:'\\f1d7'}.need-share-button_dropdown .icon-share:before{content:'\\f1e0'}.need-share-button_dropdown .icon-share-squared:before{content:'\\f1e1'}.need-share-button_dropdown .icon-pinterest:before{content:'\\f231'}.need-share-button_dropdown .icon-odnoklassniki:before{content:'\\f263'}.need-share-button_dropdown .icon-linkedin-squared:before{content:'\\f30c'}.need-share-button_dropdown .icon-friendfeed:before{content:'\\f312'}.need-share-button_dropdown .icon-linkedin-rect:before{content:'\\f31b'}.need-share-button_dropdown .icon-evernote:before{content:'\\f333'}.need-share-button,.need-share-button-opened{position:relative}.need-share-button-opened img.need-share-wechat-code-image{display:block;max-width:150px;margin:5px auto}.need-share-button_dropdown{position:absolute;z-index:10;visibility:hidden;overflow:hidden;width:300px;font-size:16px;-webkit-transition:.3s;transition:.3s;-webkit-transform:scale(.1);-ms-transform:scale(.1);transform:scale(.1);text-align:center;white-space:normal;opacity:0;-webkit-border-radius:4px;border-radius:4px;background-color:#fff;-webkit-box-shadow:0 0 2px rgba(0,0,0,.5);box-shadow:0 0 2px rgba(0,0,0,.5)}.need-share-button-opened .need-share-button_dropdown{visibility:visible;-webkit-transform:scale(1);-ms-transform:scale(1);transform:scale(1);opacity:1}.need-share-button_dropdown-box-horizontal,.need-share-button_dropdown-box-vertical{-webkit-border-radius:0;border-radius:0}.need-share-button_dropdown-box-vertical{width:50px}.need-share-button_dropdown-box-horizontal{width:auto;white-space:nowrap}.need-share-button_link{display:inline-block;width:50px;height:50px;line-height:50px;cursor:pointer;text-align:center}.need-share-button_link:hover{-webkit-transition:.3s;transition:.3s;opacity:.7}.need-share-button_dropdown-top-left{right:100%;bottom:100%;margin-right:10px;margin-bottom:10px}.need-share-button_dropdown-top-right{bottom:100%;left:100%;margin-bottom:10px;margin-left:10px}.need-share-button_dropdown-top-center{bottom:100%;left:50%;margin-bottom:10px}.need-share-button_dropdown-middle-left{top:50%;right:100%;margin-right:10px}.need-share-button_dropdown-middle-right{top:50%;left:100%;margin-left:10px}.need-share-button_dropdown-bottom-left{top:100%;right:100%;margin-top:10px;margin-right:10px}.need-share-button_dropdown-bottom-right{top:100%;left:100%;margin-top:10px;margin-left:10px}.need-share-button_dropdown-bottom-center{top:100%;left:50%;margin-top:10px}.need-share-button-default{display:inline-block;margin-bottom:0;padding:6px 12px;font-size:14px;line-height:1.42857143;font-weight:400;color:#333;cursor:pointer;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;text-align:center;vertical-align:middle;border:1px solid #ccc;-webkit-border-radius:4px;border-radius:4px;background-color:#fff}.need-share-button_wechat{color:#a2dc30}.need-share-button_wechat.need-share-button_link-box{color:#fff;background:#a2dc30}.need-share-button_weibo{color:#d52b2b}.need-share-button_weibo.need-share-button_link-box{color:#fff;background:#d52b2b}.need-share-button_douban{color:#072}.need-share-button_douban:before{content:'豆'}.need-share-button_douban.need-share-button_link-box{color:#fff;background:#072}.need-share-button_qqzone{color:#ffce00}.need-share-button_qqzone:before{content:'\\f1d6'}.need-share-button_qqzone.need-share-button_link-box{color:#fff;background:#ffce00}.need-share-button_renren{color:#207cc5}.need-share-button_renren.need-share-button_link-box{color:#fff;background:#207cc5}.need-share-button_mailto{color:#efbe00}.need-share-button_mailto:before{content:'\\e811'}.need-share-button_mailto.need-share-button_link-box{color:#fff;background:#efbe00}.need-share-button_twitter{color:#00acec}.need-share-button_twitter.need-share-button_link-box{color:#fff;background:#00acec}.need-share-button_pinterest{color:#cd2027}.need-share-button_pinterest.need-share-button_link-box{color:#fff;background:#cd2027}.need-share-button_facebook{color:#3b5998}.need-share-button_facebook.need-share-button_link-box{color:#fff;background:#3b5998}.need-share-button_googleplus{color:#d44132}.need-share-button_googleplus.need-share-button_link-box{color:#fff;background:#d44132}.need-share-button_reddit{color:#000}.need-share-button_reddit.need-share-button_link-box{color:#fff;background:#000}.need-share-button_delicious{color:#000}.need-share-button_delicious.need-share-button_link-box{color:#fff;background:#000}.need-share-button_tapiture{color:#30547d}.need-share-button_tapiture.need-share-button_link-box{color:#fff;background:#30547d}.need-share-button_stumbleupon{color:#f04e23}.need-share-button_stumbleupon.need-share-button_link-box{color:#fff;background:#f04e23}.need-share-button_linkedin{color:#0085af}.need-share-button_linkedin.need-share-button_link-box{color:#fff;background:#0085af}.need-share-button_slashdot{color:#026664}.need-share-button_slashdot.need-share-button_link-box{color:#fff;background:#026664}.need-share-button_technorati{color:#49ae47}.need-share-button_technorati.need-share-button_link-box{color:#fff;background:#49ae47}.need-share-button_posterous{color:#795d31}.need-share-button_posterous.need-share-button_link-box{color:#fff;background:#795d31}.need-share-button_tumblr{color:#34465d}.need-share-button_tumblr.need-share-button_link-box{color:#fff;background:#34465d}.need-share-button_googlebookmarks{color:#fde331}.need-share-button_googlebookmarks.need-share-button_link-box{color:#fff;background:#fde331}.need-share-button_newsvine{color:#03652c}.need-share-button_newsvine.need-share-button_link-box{color:#fff;background:#03652c}.need-share-button_pingfm{color:#94b5da}.need-share-button_pingfm.need-share-button_link-box{color:#fff;background:#94b5da}.need-share-button_evernote{color:#79d626}.need-share-button_evernote.need-share-button_link-box{color:#fff;background:#79d626}.need-share-button_friendfeed{color:#b0cbe9}.need-share-button_friendfeed.need-share-button_link-box{color:#fff;background:#b0cbe9}.need-share-button_vkontakte{color:#4c75a3}.need-share-button_vkontakte.need-share-button_link-box{color:#fff;background:#4c75a3}.need-share-button_odnoklassniki{color:#ed812b}.need-share-button_odnoklassniki.need-share-button_link-box{color:#fff;background:#ed812b}.need-share-button_mailru{color:#f89c0e}.need-share-button_mailru.need-share-button_link-box{color:#fff;background:#f89c0e}"},{"title":"","date":"2020-02-03T07:24:56.636Z","updated":"2020-02-03T07:24:56.636Z","comments":true,"path":"lib/needsharebutton/dist/fontello-embedded.css","permalink":"http://wzw1016.ml/lib/needsharebutton/dist/fontello-embedded.css","excerpt":"","text":"@font-face { font-family: 'fontello-nms'; src: url('font/fontello.eot?14876200'); src: url('font/fontello.eot?14876200#iefix') format('embedded-opentype'), url('font/fontello.svg?14876200#fontello') format('svg'); font-weight: normal; font-style: normal; } @font-face { font-family: 'fontello-nms'; src: url('data:application/octet-stream;base64,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') format('woff'), url('data:application/octet-stream;base64,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LbA7LCMgLkawAiVGUlggPFkusSsBFCstsDwsIyAuRrACJUZQWCA8WS6xKwEUKy2wPSwjIC5GsAIlRlJYIDxZIyAuRrACJUZQWCA8WS6xKwEUKy2wPiywNSsjIC5GsAIlRlJYIDxZLrErARQrLbA/LLA2K4ogIDywBCNCijgjIC5GsAIlRlJYIDxZLrErARQrsARDLrArKy2wQCywABawBCWwBCYgLkcjRyNhsAlDKyMgPCAuIzixKwEUKy2wQSyxCAQlQrAAFrAEJbAEJSAuRyNHI2EgsAQjQrAJQysgsGBQWCCwQFFYswIgAyAbswImAxpZQkIjIEewBEOwAmIgsABQWLBAYFlmsAFjYCCwASsgiophILACQ2BkI7ADQ2FkUFiwAkNhG7ADQ2BZsAMlsAJiILAAUFiwQGBZZrABY2GwAiVGYTgjIDwjOBshICBGI0ewASsjYTghWbErARQrLbBCLLA1Ky6xKwEUKy2wQyywNishIyAgPLAEI0IjOLErARQrsARDLrArKy2wRCywABUgR7AAI0KyAAEBFRQTLrAxKi2wRSywABUgR7AAI0KyAAEBFRQTLrAxKi2wRiyxAAEUE7AyKi2wRyywNCotsEgssAAWRSMgLiBGiiNhOLErARQrLbBJLLAII0KwSCstsEossgAAQSstsEsssgABQSstsEwssgEAQSstsE0ssgEBQSstsE4ssgAAQistsE8ssgABQistsFAssgEAQistsFEssgEBQistsFIssgAAPistsFMssgABPistsFQssgEAPistsFUssgEBPistsFYssgAAQCstsFcssgABQCstsFgssgEAQCstsFkssgEBQCstsFossgAAQystsFsssgABQystsFwssgEAQystsF0ssgEBQystsF4ssgAAPystsF8ssgABPystsGAssgEAPystsGEssgEBPystsGIssDcrLrErARQrLbBjLLA3K7A7Ky2wZCywNyuwPCstsGUssAAWsDcrsD0rLbBmLLA4Ky6xKwEUKy2wZyywOCuwOystsGgssDgrsDwrLbBpLLA4K7A9Ky2waiywOSsusSsBFCstsGsssDkrsDsrLbBsLLA5K7A8Ky2wbSywOSuwPSstsG4ssDorLrErARQrLbBvLLA6K7A7Ky2wcCywOiuwPCstsHEssDorsD0rLbByLLMJBAIDRVghGyMhWUIrsAhlsAMkUHiwARUwLQBLuADIUlixAQGOWbABuQgACABjcLEABUKyAAEAKrEABUKzCgIBCCqxAAVCsw4AAQgqsQAGQroCwAABAAkqsQAHQroAQAABAAkqsQMARLEkAYhRWLBAiFixA2REsSYBiFFYugiAAAEEQIhjVFixAwBEWVlZWbMMAgEMKrgB/4WwBI2xAgBEAAA=') format('truetype'); } /* Chrome hack: SVG is rendered more smooth in Windozze. 100% magic, uncomment if you need it. */ /* Note, that will break hinting! In other OS-es font will be not as sharp as it could be */ /* @media screen and (-webkit-min-device-pixel-ratio:0) { @font-face { font-family: 'fontello-nms'; src: url('../font/fontello.svg?14876200#fontello') format('svg'); } } */ .need-share-button_dropdown [class^=\"icon-\"]:before, .need-share-button_dropdown [class*=\" icon-\"]:before { font-family: \"fontello-nms\"; font-style: normal; font-weight: normal; speak: none; display: inline-block; text-decoration: inherit; width: 1em; margin-right: .2em; text-align: center; /* opacity: .8; */ /* For safety - reset parent styles, that can break glyph codes*/ font-variant: normal; text-transform: none; /* fix buttons height, for twitter bootstrap */ line-height: 1em; /* Animation center compensation - margins should be symmetric */ /* remove if not needed */ margin-left: .2em; /* you can be more comfortable with increased icons size */ /* font-size: 120%; */ /* Uncomment for 3D effect */ /* text-shadow: 1px 1px 1px rgba(127, 127, 127, 0.3); */ } .need-share-button_dropdown .icon-ok:before { content: '\\e800'; } /* '' */ .need-share-button_dropdown .icon-heart:before { content: '\\e801'; } /* '' */ .need-share-button_dropdown .icon-thumbs-up:before { content: '\\e802'; } /* '' */ .need-share-button_dropdown .icon-thumbs-down:before { content: '\\e803'; } /* '' */ .need-share-button_dropdown .icon-heart-empty:before { content: '\\e804'; } /* '' */ .need-share-button_dropdown .icon-star:before { content: '\\e805'; } /* '' */ .need-share-button_dropdown .icon-star-empty:before { content: '\\e806'; } /* '' */ .need-share-button_dropdown .icon-up-open:before { content: '\\e807'; } /* '' */ .need-share-button_dropdown .icon-down-open:before { content: '\\e808'; } /* '' */ .need-share-button_dropdown .icon-forward:before { content: '\\e809'; } /* '' */ .need-share-button_dropdown .icon-bookmark:before { content: '\\e80a'; } /* '' */ .need-share-button_dropdown .icon-path:before { content: '\\e80b'; } /* '' */ .need-share-button_dropdown .icon-reddit:before { content: '\\e80c'; } /* '' */ .need-share-button_dropdown .icon-googleplus:before { content: '\\e80e'; } /* '' */ .need-share-button_dropdown .icon-posterous:before { content: '\\e80f'; } /* '' */ .need-share-button_dropdown .icon-bookmark-1:before { content: '\\e810'; } /* '' */ .need-share-button_dropdown .icon-mail:before { content: '\\e811'; } /* '' */ .need-share-button_dropdown .icon-bookmark-empty:before { content: '\\f097'; } /* '' */ .need-share-button_dropdown .icon-twitter:before { content: '\\f099'; } /* '' */ .need-share-button_dropdown .icon-facebook:before { content: '\\f09a'; } /* '' */ .need-share-button_dropdown .icon-rss:before { content: '\\f09e'; } /* '' */ .need-share-button_dropdown .icon-gplus:before { content: '\\f0d5'; } /* '' */ .need-share-button_dropdown .icon-linkedin:before { content: '\\f0e1'; } /* '' */ .need-share-button_dropdown .icon-quote-left:before { content: '\\f10d'; } /* '' */ .need-share-button_dropdown .icon-quote-right:before { content: '\\f10e'; } /* '' */ .need-share-button_dropdown .icon-reply:before { content: '\\f112'; } /* '' */ .need-share-button_dropdown .icon-reply-all:before { content: '\\f122'; } /* '' */ .need-share-button_dropdown .icon-thumbs-up-alt:before { content: '\\f164'; } /* '' */ .need-share-button_dropdown .icon-thumbs-down-alt:before { content: '\\f165'; } /* '' */ .need-share-button_dropdown .icon-tumblr:before { content: '\\f173'; } /* '' */ .need-share-button_dropdown .icon-vkontakte:before { content: '\\f189'; } /* '' */ .need-share-button_dropdown .icon-weibo:before { content: '\\f18a'; } /* '' */ .need-share-button_dropdown .icon-renren:before { content: '\\f18b'; } /* '' */ .need-share-button_dropdown .icon-stumbleupon:before { content: '\\f1a4'; } /* '' */ .need-share-button_dropdown .icon-delicious:before { content: '\\f1a5'; } /* '' */ .need-share-button_dropdown .icon-qq:before { content: '\\f1d6'; } /* '' */ .need-share-button_dropdown .icon-wechat:before { content: '\\f1d7'; } /* '' */ .need-share-button_dropdown .icon-share:before { content: '\\f1e0'; } /* '' */ .need-share-button_dropdown .icon-share-squared:before { content: '\\f1e1'; } /* '' */ .need-share-button_dropdown .icon-pinterest:before { content: '\\f231'; } /* '' */ .need-share-button_dropdown .icon-odnoklassniki:before { content: '\\f263'; } /* '' */ .need-share-button_dropdown .icon-linkedin-squared:before { content: '\\f30c'; } /* '' */ .need-share-button_dropdown .icon-friendfeed:before { content: '\\f312'; } /* '' */ .need-share-button_dropdown .icon-linkedin-rect:before { content: '\\f31b'; } /* '' */ .need-share-button_dropdown .icon-evernote:before { content: '\\f333'; } /* '' */"},{"title":"","date":"2020-02-03T07:24:56.641Z","updated":"2020-02-03T07:24:56.641Z","comments":true,"path":"lib/needsharebutton/src/js/needsharebutton.js","permalink":"http://wzw1016.ml/lib/needsharebutton/src/js/needsharebutton.js","excerpt":"","text":"/*********************************************** needShareButton - Version 1.0.0 - Copyright 2015 Dzmitry Vasileuski - Licensed under MIT (http://opensource.org/licenses/MIT) ***********************************************/ (function() { // find closest function closest(elem, parent) { if (typeof(parent) == 'string') { var matchesSelector = elem.matches || elem.webkitMatchesSelector || elem.mozMatchesSelector || elem.msMatchesSelector; if (!!matchesSelector) { while (elem) { if (matchesSelector.bind(elem)(parent)) { return elem; } else { elem = elem.parentElement; } } } return false; } else { while (elem) { if (elem == parent) { return elem; } else { elem = elem.parentElement; } } return false; } } // share button class window.needShareButton = function(elem, options) { // create element reference var root = this; root.elem = elem || 'need-share-button'; /* Helpers ***********************************************/ // get title from html root.getTitle = function() { var content; // check querySelector existance for old browsers if (document.querySelector) { if (content = document.querySelector('title')){ return content.innerText; } } return document.title; }; // get image from html root.getImage = function() { var content; // check querySelector existance for old browsers if (document.querySelector) { if (content = document.querySelector('meta[property=\"og:image\"]') || document.querySelector('meta[name=\"twitter:image\"]')) { return content.getAttribute('content'); } else return ''; } else return ''; }; // get description from html root.getDescription = function() { var content; // check querySelector existance for old browsers if (document.querySelector) { if (content = document.querySelector('meta[property=\"og:description\"]') || document.querySelector('meta[name=\"twitter:description\"]') || document.querySelector('meta[name=\"description\"]')) { return content.getAttribute('content'); } else return ''; } else { if (content = document.getElementsByTagName('meta').namedItem('description')) return content.getAttribute('content'); else return ''; } }; // share urls for all networks root.share = { 'weibo': function (el) { var myoptions = getOptions(el); var url = 'http://v.t.sina.com.cn/share/share.php?title=' + encodeURIComponent(myoptions.title) + \"&url=\"+encodeURIComponent(myoptions.url) + \"&pic=\"+encodeURIComponent(myoptions.image); root.popup(url); }, 'wechat': function (el) { var myoptions = getOptions(el); var imgSrc = 'https://api.qrserver.com/v1/create-qr-code/?size=150x150&data='+encodeURIComponent(myoptions.url); var dropdownEl = el.querySelector('.need-share-button_dropdown'); var img = dropdownEl.getElementsByClassName('need-share-wechat-code-image')[0]; if (img) { img.remove(); } else { img = document.createElement('img'); img.src = imgSrc; img.alt = 'loading wechat image...'; img.setAttribute(\"class\",'need-share-wechat-code-image'); dropdownEl.appendChild(img); } }, 'douban': function (el) { var myoptions = getOptions(el); var url = 'https://www.douban.com/share/service?name=' + encodeURIComponent(myoptions.title) + \"&href=\"+encodeURIComponent(myoptions.url) + \"&image=\"+encodeURIComponent(myoptions.image); root.popup(url); }, 'qqzone': function (el) { var myoptions = getOptions(el); var url = 'http://sns.qzone.qq.com/cgi-bin/qzshare/cgi_qzshare_onekey?title=' + encodeURIComponent(myoptions.title) + \"&url=\"+encodeURIComponent(myoptions.url) + \"&pics=\"+encodeURIComponent(myoptions.image) + \"&desc=\"+ encodeURIComponent(myoptions.description); root.popup(url); }, 'renren': function (el) { var myoptions = getOptions(el); var url = 'http://widget.renren.com/dialog/share?title=' + encodeURIComponent(myoptions.title) + \"&resourceUrl=\"+encodeURIComponent(myoptions.url) + \"&pic=\"+encodeURIComponent(myoptions.image) + \"&description=\"+ encodeURIComponent(myoptions.description); root.popup(url); }, 'mailto' : function(el) { var myoptions = getOptions(el); var url = 'mailto:?subject=' + encodeURIComponent(myoptions.title) + '&body=Thought you might enjoy reading this: ' + encodeURIComponent(myoptions.url) + ' - ' + encodeURIComponent(myoptions.description); window.location.href = url; }, 'twitter' : function(el) { var myoptions = getOptions(el); var url = myoptions.protocol + 'twitter.com/intent/tweet?text='; url += encodeURIComponent(myoptions.title) + \"&url=\" + encodeURIComponent(myoptions.url); root.popup(url); }, 'pinterest' : function(el) { var myoptions = getOptions(el); var url = myoptions.protocol + 'pinterest.com/pin/create/bookmarklet/?is_video=false'; url += '&media=' + encodeURIComponent(myoptions.image); url += '&url=' + encodeURIComponent(myoptions.url); url += '&description=' + encodeURIComponent(myoptions.title); root.popup(url); }, 'facebook' : function(el) { var myoptions = getOptions(el); var url = myoptions.protocol + 'www.facebook.com/share.php?'; url += 'u=' + encodeURIComponent(myoptions.url); url += '&title=' + encodeURIComponent(myoptions.title); root.popup(url); }, 'googleplus' : function(el) { var myoptions = getOptions(el); var url = myoptions.protocol + 'plus.google.com/share?'; url += 'url=' + encodeURIComponent(myoptions.url); root.popup(url); }, 'reddit' : function(el) { var myoptions = getOptions(el); var url = myoptions.protocol + 'www.reddit.com/submit?'; url += 'url=' + encodeURIComponent(myoptions.url); url += '&title=' + encodeURIComponent(myoptions.title); root.popup(url); }, 'delicious' : function(el) { var myoptions = getOptions(el); var url = myoptions.protocol + 'del.icio.us/post?'; url += 'url=' + encodeURIComponent(myoptions.url); url += '&title=' + encodeURIComponent(myoptions.title); url += '&notes=' + encodeURIComponent(myoptions.description); root.popup(url); }, // 'tapiture' : function(el) { // var myoptions = getOptions(el); // var url = myoptions.protocol + 'tapiture.com/bookmarklet/image?'; // url += 'img_src=' + encodeURIComponent(myoptions.image); // url += '&page_url=' + encodeURIComponent(myoptions.url); // url += '&page_title=' + encodeURIComponent(myoptions.title); // // root.popup(url); // }, 'stumbleupon' : function(el) { var myoptions = getOptions(el); var url = myoptions.protocol + 'www.stumbleupon.com/submit?'; url += 'url=' + encodeURIComponent(myoptions.url); url += '&title=' + encodeURIComponent(myoptions.title); root.popup(url); }, 'linkedin' : function(el) { var myoptions = getOptions(el); var url = myoptions.protocol + 'www.linkedin.com/shareArticle?mini=true'; url += '&url=' + encodeURIComponent(myoptions.url); url += '&title=' + encodeURIComponent(myoptions.title); url += '&source=' + encodeURIComponent(myoptions.source); root.popup(url); }, // 'slashdot' : function(el) { // var myoptions = getOptions(el); // var url = myoptions.protocol + 'slashdot.org/bookmark.pl?'; // url += 'url=' + encodeURIComponent(myoptions.url); // url += '&title=' + encodeURIComponent(myoptions.title); // // root.popup(url); // }, // 'technorati' : function(el) { // var myoptions = getOptions(el); // var url = myoptions.protocol + 'technorati.com/faves?'; // url += 'add=' + encodeURIComponent(myoptions.url); // url += '&title=' + encodeURIComponent(myoptions.title); // // root.popup(url); // }, 'posterous' : function(el) { var myoptions = getOptions(el); var url = myoptions.protocol + 'posterous.com/share?'; url += 'linkto=' + encodeURIComponent(myoptions.url); root.popup(url); }, 'tumblr' : function(el) { var myoptions = getOptions(el); var url = myoptions.protocol + 'www.tumblr.com/share?v=3'; url += '&u=' + encodeURIComponent(myoptions.url); url += '&t=' + encodeURIComponent(myoptions.title); root.popup(url); }, // 'googlebookmarks' : function(el) { // var myoptions = getOptions(el); // var url = myoptions.protocol + 'www.google.com/bookmarks/mark?op=edit'; // url += '&bkmk=' + encodeURIComponent(myoptions.url); // url += '&title=' + encodeURIComponent(myoptions.title); // url += '&annotation=' + encodeURIComponent(myoptions.description); // // root.popup(url); // }, // 'newsvine' : function(el) { // var myoptions = getOptions(el); // var url = myoptions.protocol + 'www.newsvine.com/_tools/seed&save?'; // url += 'u=' + encodeURIComponent(myoptions.url); // url += '&h=' + encodeURIComponent(myoptions.title); // // root.popup(url); // }, // 'pingfm' : function(el) { // var myoptions = getOptions(el); // var url = myoptions.protocol + 'ping.fm/ref/?'; // url += 'link=' + encodeURIComponent(myoptions.url); // url += '&title=' + encodeURIComponent(myoptions.title); // url += '&body=' + encodeURIComponent(myoptions.description); // // root.popup(url); // }, 'evernote' : function(el) { var myoptions = getOptions(el); var url = myoptions.protocol + 'www.evernote.com/clip.action?'; url += 'url=' + encodeURIComponent(myoptions.url); url += '&title=' + encodeURIComponent(myoptions.title); root.popup(url); }, 'friendfeed' : function(el) { var myoptions = getOptions(el); var url = myoptions.protocol + 'www.friendfeed.com/share?'; url += 'url=' + encodeURIComponent(myoptions.url); url += '&title=' + encodeURIComponent(myoptions.title); root.popup(url); }, 'vkontakte' : function(el) { var myoptions = getOptions(el); var url = myoptions.protocol + 'vkontakte.ru/share.php?'; url += 'url=' + encodeURIComponent(myoptions.url); url += '&title=' + encodeURIComponent(myoptions.title); url += '&description=' + encodeURIComponent(myoptions.description); url += '&image=' + encodeURIComponent(myoptions.image); url += '&noparse=true'; root.popup(url); }, 'odnoklassniki' : function(el) { var myoptions = getOptions(el); var url = myoptions.protocol + 'www.odnoklassniki.ru/dk?st.cmd=addShare&st.s=1'; url += '&st.comments=' + encodeURIComponent(myoptions.description); url += '&st._surl=' + encodeURIComponent(myoptions.url); root.popup(url); }, // 'mailru' : function(el) { // var myoptions = getOptions(el); // var url = myoptions.protocol + 'connect.mail.ru/share?'; // url += 'url=' + encodeURIComponent(myoptions.url); // url += '&title=' + encodeURIComponent(myoptions.title); // url += '&description=' + encodeURIComponent(myoptions.description); // url += '&imageurl=' + encodeURIComponent(myoptions.image); // // root.popup(url); // } } // open share link in a popup root.popup = function(url) { // set left and top position var popupWidth = 600, popupHeight = 500, // fix dual screen mode dualScreenLeft = window.screenLeft != undefined ? window.screenLeft : screen.left, dualScreenTop = window.screenTop != undefined ? window.screenTop : screen.top, width = window.innerWidth ? window.innerWidth : document.documentElement.clientWidth ? document.documentElement.clientWidth : screen.width, height = window.innerHeight ? window.innerHeight : document.documentElement.clientHeight ? document.documentElement.clientHeight : screen.height, // calculate top and left position left = ((width / 2) - (popupWidth / 2)) + dualScreenLeft, top = ((height / 2) - (popupHeight / 2)) + dualScreenTop, // show popup shareWindow = window.open(url,'targetWindow','toolbar=no,location=no,status=no,menubar=no,scrollbars=yes,resizable=yes,width=' + popupWidth + ', height=' + popupHeight + ', top=' + top + ', left=' + left); // Puts focus on the newWindow if (window.focus) { shareWindow.focus(); } } /* Set options ***********************************************/ // create default options root.options = { iconStyle: 'default', // default or box boxForm: 'horizontal', // horizontal or vertical position: 'bottomCenter', // top / middle / bottom + Left / Center / Right protocol: ['http', 'https'].indexOf(window.location.href.split(':')[0]) === -1 ? 'https://' : '//', networks: 'Weibo,Wechat,Douban,QQZone,Twitter,Pinterest,Facebook,GooglePlus,Reddit,Linkedin,Tumblr,Mailto' }; // integrate custom options for (var i in options) { root.options[i] = options[i]; } // convert networks string into array root.options.networks = root.options.networks.toLowerCase().split(','); function getOptions(el) { // integrate data attribute options var ret = {}; for (var i in root.options) { ret[i] = root.options[i]; } // these attrs must get dynamically. ret.url = window.location.href; ret.title = root.getTitle(); ret.image = root.getImage(); ret.description = root.getDescription(); for (var option in el.dataset) { // replace only 'share-' prefixed data-attributes if (option.match(/share/)) { var new_option = option.replace(/share/, ''); if (!new_option.length) { continue; } new_option = new_option.charAt(0).toLowerCase() + new_option.slice(1); var val = el.dataset[option]; if (new_option === 'networks') { val = val.toLowerCase().split(','); } else if (new_option === 'url' && val && val[0] === '/') { // fix relative url problem. val = location.origin + val; } ret[new_option] = val; } } return ret; } function createDropdown(el) { // create dropdown var dropdownEl = document.createElement('span'); dropdownEl.className = 'need-share-button_dropdown'; if (el.querySelector('.need-share-button_dropdown')) { return; } var myoptions = getOptions(el); // set dropdown row length if (myoptions.iconStyle == 'box' && myoptions.boxForm == 'horizontal') dropdownEl.className += ' need-share-button_dropdown-box-horizontal'; else if (myoptions.iconStyle == 'box' && myoptions.boxForm == 'vertical') dropdownEl.className += ' need-share-button_dropdown-box-vertical'; // set dropdown position setTimeout(function() { switch (myoptions.position) { case 'topLeft': dropdownEl.className += ' need-share-button_dropdown-top-left'; break case 'topRight': dropdownEl.className += ' need-share-button_dropdown-top-right'; break case 'topCenter': dropdownEl.className += ' need-share-button_dropdown-top-center'; dropdownEl.style.marginLeft = - dropdownEl.offsetWidth / 2 + 'px'; break case 'middleLeft': dropdownEl.className += ' need-share-button_dropdown-middle-left'; dropdownEl.style.marginTop = - dropdownEl.offsetHeight / 2 + 'px'; break case 'middleRight': dropdownEl.className += ' need-share-button_dropdown-middle-right'; dropdownEl.style.marginTop = - dropdownEl.offsetHeight / 2 + 'px'; break case 'bottomLeft': dropdownEl.className += ' need-share-button_dropdown-bottom-left'; break case 'bottomRight': dropdownEl.className += ' need-share-button_dropdown-bottom-right'; break case 'bottomCenter': dropdownEl.className += ' need-share-button_dropdown-bottom-center'; dropdownEl.style.marginLeft = - dropdownEl.offsetWidth / 2 + 'px'; break default: dropdownEl.className += ' need-share-button_dropdown-bottom-center'; dropdownEl.style.marginLeft = - dropdownEl.offsetWidth / 2 + 'px'; break } },1); // fill fropdown with buttons var iconClass = myoptions.iconStyle == 'default' ? 'need-share-button_link need-share-button_' : 'need-share-button_link-' + myoptions.iconStyle + ' need-share-button_link need-share-button_'; for (var network in myoptions.networks) { var link = document.createElement('span'); network = myoptions.networks[network]; link.className = iconClass + network; link.className += ' icon-' + network; link.dataset.network = network; link.title = network; dropdownEl.appendChild(link); } dropdownEl.addEventListener('click', function (event) { if (closest(event.target, '.need-share-button_link')) { event.preventDefault(); event.stopPropagation(); root.share[event.target.dataset.network](el); return false; } }); el.appendChild(dropdownEl); } // close on click outside document.addEventListener('click', function(event) { var openedEl = document.querySelector('.need-share-button-opened'); if (!closest(event.target, '.need-share-button-opened')) { if (openedEl) { openedEl.classList.remove('need-share-button-opened'); // hide wechat code image when close the dropdown. if (openedEl.querySelector('.need-share-wechat-code-image')) { openedEl.querySelector('.need-share-wechat-code-image').remove(); } } else { var el = closest(event.target, root.elem); if (el) { if (!el.classList.contains('need-share-button-opened')) { createDropdown(el); setTimeout(function () { el.classList.add('need-share-button-opened'); }, 1); } } } } }); }; new needShareButton('.need-share-button'); })();"},{"title":"","date":"2020-02-03T07:24:56.642Z","updated":"2020-02-03T07:24:56.642Z","comments":true,"path":"lib/needsharebutton/src/less/needsharebutton.css","permalink":"http://wzw1016.ml/lib/needsharebutton/src/less/needsharebutton.css","excerpt":"","text":"/*********************************************** needShareButton - Version 1.0.0 - Copyright 2015 Dzmitry Vasileuski - Licensed under MIT (http://opensource.org/licenses/MIT) ***********************************************/ /* Social icons font ***********************************************/ @import url(\"fontello-embedded.css\"); .need-share-button { position: relative; } .need-share-button-opened { position: relative; } .need-share-button-opened img.need-share-wechat-code-image { width: 100%; max-width: 200px; display: block; margin: auto; } .need-share-button_dropdown { width: 300px; z-index: 10; overflow: hidden; text-align: center; border-radius: 4px; visibility: hidden; opacity: 0; transform: scale(0.1); transition: .3s; font-size: 16px; position: absolute; background-color: #fff; box-shadow: 0 0 2px rgba(0, 0, 0, 0.5); white-space: normal; } .need-share-button-opened .need-share-button_dropdown { visibility: visible; opacity: 1; transform: scale(1); } .need-share-button_dropdown-box-vertical, .need-share-button_dropdown-box-horizontal { border-radius: 0; } .need-share-button_dropdown-box-vertical { width: 50px; } .need-share-button_dropdown-box-horizontal { width: auto; white-space: nowrap; } .need-share-button_link { display: inline-block; width: 50px; height: 50px; line-height: 50px; text-align: center; cursor: pointer; } .need-share-button_link:hover { transition: .3s; opacity: .7; } /* Dropdown position ***********************************************/ .need-share-button_dropdown-top-left { bottom: 100%; right: 100%; margin-right: 10px; margin-bottom: 10px; } .need-share-button_dropdown-top-right { bottom: 100%; left: 100%; margin-left: 10px; margin-bottom: 10px; } .need-share-button_dropdown-top-center { bottom: 100%; left: 50%; margin-bottom: 10px; } .need-share-button_dropdown-middle-left { top: 50%; right: 100%; margin-right: 10px; } .need-share-button_dropdown-middle-right { top: 50%; left: 100%; margin-left: 10px; } .need-share-button_dropdown-bottom-left { top: 100%; right: 100%; margin-right: 10px; margin-top: 10px; } .need-share-button_dropdown-bottom-right { top: 100%; left: 100%; margin-left: 10px; margin-top: 10px; } .need-share-button_dropdown-bottom-center { top: 100%; left: 50%; margin-top: 10px; } /* Default theme ***********************************************/ .need-share-button-default { display: inline-block; padding: 6px 12px; margin-bottom: 0; font-size: 14px; font-weight: 400; line-height: 1.42857143; text-align: center; vertical-align: middle; cursor: pointer; -webkit-user-select: none; -moz-user-select: none; -ms-user-select: none; user-select: none; border: 1px solid #ccc; border-radius: 4px; color: #333; background-color: #fff; } /* Network buttons ***********************************************/ .need-share-button_wechat { color: #a2dc30; } .need-share-button_wechat.need-share-button_link-box { background: #a2dc30; color: #fff; } .need-share-button_weibo { color: #d52b2b; } .need-share-button_weibo.need-share-button_link-box { background: #d52b2b; color: #fff; } .need-share-button_douban { color: #072; } .need-share-button_douban:before { content: '豆'; } .need-share-button_douban.need-share-button_link-box { background: #072; color: #fff; } .need-share-button_qqzone { color: #ffce00; } .need-share-button_qqzone:before { content: '\\f1d6'; } .need-share-button_qqzone.need-share-button_link-box { background: #ffce00; color: #fff; } .need-share-button_renren { color: #207cc5; } .need-share-button_renren.need-share-button_link-box { background: #207cc5; color: #fff; } .need-share-button_mailto { color: #EFBE00; } .need-share-button_mailto.need-share-button_link-box { background: #EFBE00; color: #fff; } .need-share-button_twitter { color: #00ACEC; } .need-share-button_twitter.need-share-button_link-box { background: #00ACEC; color: #fff; } .need-share-button_pinterest { color: #CD2027; } .need-share-button_pinterest.need-share-button_link-box { background: #CD2027; color: #fff; } .need-share-button_facebook { color: #3B5998; } .need-share-button_facebook.need-share-button_link-box { background: #3B5998; color: #fff; } .need-share-button_googleplus { color: #D44132; } .need-share-button_googleplus.need-share-button_link-box { background: #D44132; color: #fff; } .need-share-button_reddit { color: #000000; } .need-share-button_reddit.need-share-button_link-box { background: #000000; color: #fff; } .need-share-button_delicious { color: #000000; } .need-share-button_delicious.need-share-button_link-box { background: #000000; color: #fff; } .need-share-button_tapiture { color: #30547D; } .need-share-button_tapiture.need-share-button_link-box { background: #30547D; color: #fff; } .need-share-button_stumbleupon { color: #F04E23; } .need-share-button_stumbleupon.need-share-button_link-box { background: #F04E23; color: #fff; } .need-share-button_linkedin { color: #0085AF; } .need-share-button_linkedin.need-share-button_link-box { background: #0085AF; color: #fff; } .need-share-button_slashdot { color: #026664; } .need-share-button_slashdot.need-share-button_link-box { background: #026664; color: #fff; } .need-share-button_technorati { color: #49AE47; } .need-share-button_technorati.need-share-button_link-box { background: #49AE47; color: #fff; } .need-share-button_posterous { color: #795D31; } .need-share-button_posterous.need-share-button_link-box { background: #795D31; color: #fff; } .need-share-button_tumblr { color: #34465D; } .need-share-button_tumblr.need-share-button_link-box { background: #34465D; color: #fff; } .need-share-button_googlebookmarks { color: #FDE331; } .need-share-button_googlebookmarks.need-share-button_link-box { background: #FDE331; color: #fff; } .need-share-button_newsvine { color: #03652C; } .need-share-button_newsvine.need-share-button_link-box { background: #03652C; color: #fff; } .need-share-button_pingfm { color: #94B5DA; } .need-share-button_pingfm.need-share-button_link-box { background: #94B5DA; color: #fff; } .need-share-button_evernote { color: #79D626; } .need-share-button_evernote.need-share-button_link-box { background: #79D626; color: #fff; } .need-share-button_friendfeed { color: #B0CBE9; } .need-share-button_friendfeed.need-share-button_link-box { background: #B0CBE9; color: #fff; } .need-share-button_vkontakte { color: #4C75A3; } .need-share-button_vkontakte.need-share-button_link-box { background: #4C75A3; color: #fff; } .need-share-button_odnoklassniki { color: #ED812B; } .need-share-button_odnoklassniki.need-share-button_link-box { background: #ED812B; color: #fff; } .need-share-button_mailru { color: #F89C0E; } .need-share-button_mailru.need-share-button_link-box { background: #F89C0E; color: #fff; }"}],"posts":[{"title":"自定义实现Lodash中数组的chunk方法与compact方法","slug":"自定义实现Lodash中数组的chunk方法与compact方法","date":"2020-03-22T06:19:59.000Z","updated":"2020-03-22T07:08:07.235Z","comments":true,"path":"2020/03/22/自定义实现Lodash中数组的chunk方法与compact方法/","link":"","permalink":"http://wzw1016.ml/2020/03/22/%E8%87%AA%E5%AE%9A%E4%B9%89%E5%AE%9E%E7%8E%B0Lodash%E4%B8%AD%E6%95%B0%E7%BB%84%E7%9A%84chunk%E6%96%B9%E6%B3%95%E4%B8%8Ecompact%E6%96%B9%E6%B3%95/","excerpt":"","text":"chunk(size)作用将数组（array）拆分成多个 size 长度的区块，并将这些区块组成一个新数组。 如果 array 无法被分割成全部等长的区块，那么最后剩余的元素将组成一个区块。 举个例子，假设数组有一个名为 chunk 的方法，可以实现上述功能，那么： 1234let arr = [1, 2, 3, 4, 5, 6, 7]console.log(arr.chunk(2)) // [[1, 2], [3, 4], [5, 6], [7]]console.log(arr.chunk(3)) // [[1, 2, 3], [4, 5, 6], [7]] 参数 size 的默认值为 1。 自定义实现123456789101112131415161718192021Array.prototype.chunk = function (size) &#123; // size的默认值为1 size = size || 1 const length = this.length if (length === 0) return [] if (size &gt; length) size = length const resultArrayLength = Math.ceil(length / size) // 结果数组 const resultArray = new Array(resultArrayLength) let index = 0 let start = 0 while (index &lt; resultArrayLength) &#123; resultArray[index++] = this.slice(start, start += size) &#125; return resultArray&#125; 利用 while 循环与数组的 slice 方法对原数组进行反复的抽取，得到目标数组。 compact()作用 创建一个新数组，包含原数组中所有的非假值元素。例如 false, null, 0, &quot;&quot;, undefined, 和 NaN 都是被认为是“假值”。 举个例子，假设数组有一个名为 compact 的方法，可以实现上述功能，那么： 123let arr = [0, 1, 'a', 'b', '', true, false, null]console.log(arr.compact()) // [1, 'a', 'b', true] 自定义实现123Array.prototype.compact = function () &#123; return this.filter(value =&gt; value)&#125; 利用数组的 filter 方法对原数组进行过滤，得到目标数组。 参考文章 Lodash - “Array” 方法","categories":[],"tags":[{"name":"Array","slug":"Array","permalink":"http://wzw1016.ml/tags/Array/"},{"name":"Lodash","slug":"Lodash","permalink":"http://wzw1016.ml/tags/Lodash/"}]},{"title":"数组扁平化","slug":"数组扁平化","date":"2020-03-04T09:09:41.000Z","updated":"2020-03-22T06:21:36.135Z","comments":true,"path":"2020/03/04/数组扁平化/","link":"","permalink":"http://wzw1016.ml/2020/03/04/%E6%95%B0%E7%BB%84%E6%89%81%E5%B9%B3%E5%8C%96/","excerpt":"何为数组扁平化？数组扁平化是指将一个多维数组转化为一维数组。 举个例子，假设有个名为 flatten 的函数，接受一个数组作为参数，并将之扁平化： 12const arr = [1, 2, [3, [4, 5]]]console.log(flatten(arr)) // [1, 2, 3, 4, 5]","text":"何为数组扁平化？数组扁平化是指将一个多维数组转化为一维数组。 举个例子，假设有个名为 flatten 的函数，接受一个数组作为参数，并将之扁平化： 12const arr = [1, 2, [3, [4, 5]]]console.log(flatten(arr)) // [1, 2, 3, 4, 5] 实现数组扁平化的方法flat()ES2015（即ES6）中新增了数组的 flat() 方法，可以直接对多维数组进行“展平”，返回一个“展平”后的数组。 flat() 方法和数组的其他方法一样，定义在原型对象 Array.prototype 上。 flat() 接收一个可选参数 depth， 用于指定要提取嵌套数组的结构深度，默认值为1。 使用如下： 12345const arr = ['a', ['b', [1, [2, 3]], 'd']]console.log(arr.flat()) // ['a', 'b', [1, [2, 3]], 'd']console.log(arr.flat(2)) // ['a', 'b', 1, [2, 3], 'd']console.log(arr.flat(3)) // ['a', 'b', 1, 2, 3, 'd'] 可以使用 Infinity，展开任意深度的嵌套数组。如下： 12const arr = [1, 2, [3, [4, [5, [6, [7, 8]]]]]]console.log(arr.flat(Infinity)) // [1, 2, 3, 4, 5, 6, 7, 8] 当参数 depth 为负数时，会返回一个由原数组浅拷贝后的数组。如下： 1234567const arr = [1, 2, [3, 4]]const arr2 = arr.flat(-1)console.log(arr2) // [1, 2, [3, 4]]// 修改浅拷贝得到的数组，原数组也会发生改变arr2[2][0] = 5console.log(arr) // [1, 2, [5, 4]] flat() 方法会将数组中的空项移除： 12const arr = [1, 2, , 4, 5]arr.flat() // [1, 2, 4, 5] 函数递归 + reduce() + concat()自定义一个数组的方法 flatten，用于扁平化指定数组： 12345678910function flattenDepth(array) &#123; return array.reduce((acc, item) =&gt; &#123; if(Array.isArray(item)) &#123; acc = acc.concat(flattenDepth(item)) &#125; else &#123; acc = acc.concat(item) &#125; return acc &#125;, [])&#125; 简写后： 123function flattenDepth(arr) &#123; return arr.reduce((acc, item) =&gt; acc.concat(Array.isArray(item) ? flattenDepth(item) : item), [])&#125; 扩展运算符 + some() + concat()123456function flattenDepth(array) &#123; while (array.some(item =&gt; Array.isArray(item))) &#123; array = [].concat(...array) &#125; return array&#125; 通过 ES6 的扩展运算符语法（…）将目标数组中的所有元素遍历取出，进行 concat () 合并。 总结核心思想就是，遍历目标数组，若数组中的元素为非数组，则与返回的新数组进行 concat() 合并；若数组中的元素仍为数组，则进行递归遍历，并同时与返回的新数组进行 concat() 合并，直到目标数组中的所有元素都不是数组为止。 参考文章 MDN - Array.prototype.flat()","categories":[],"tags":[{"name":"Array","slug":"Array","permalink":"http://wzw1016.ml/tags/Array/"},{"name":"flatten","slug":"flatten","permalink":"http://wzw1016.ml/tags/flatten/"},{"name":"Lodash","slug":"Lodash","permalink":"http://wzw1016.ml/tags/Lodash/"}]},{"title":"promise.then()的返回值","slug":"promise.then()的返回值","date":"2020-02-23T05:25:26.000Z","updated":"2020-02-25T06:20:10.834Z","comments":true,"path":"2020/02/23/promise.then()的返回值/","link":"","permalink":"http://wzw1016.ml/2020/02/23/promise.then()%E7%9A%84%E8%BF%94%E5%9B%9E%E5%80%BC/","excerpt":"Promise 实例具有 then 方法，也就是说，then 方法是定义在原型对象 Promise.prototype 上的。它的作用是为 Promise 实例添加状态改变时的回调函数。 Promise.prototype.then() 方法返回的是一个新的 Promise 实例对象，因此可以采用链式写法。 本文主要记录 promise.then() 返回值的不同情况。","text":"Promise 实例具有 then 方法，也就是说，then 方法是定义在原型对象 Promise.prototype 上的。它的作用是为 Promise 实例添加状态改变时的回调函数。 Promise.prototype.then() 方法返回的是一个新的 Promise 实例对象，因此可以采用链式写法。 本文主要记录 promise.then() 返回值的不同情况。 then() 的基本用法 new Promise(executor).then(onFulfilled[, onRejected]) onFulfilled： 当 Promise 变成 fulfilled 状态时调用的函数。 onRejected： 当 Promise 变成 rejected 状态时调用的函数。 then方法的返回值结论then() 返回的 promise 实例对象的结果由 then() 中指定的回调函数执行的结果决定。即由传入的 onFulfilled 或 onRejected 执行的结果决定。 没有返回任何值（实际返回 undefined），那么 then() 返回的 promise 将会成为接受（resolved）状态。promise 携带的 value 为 undefined。 123Promise.resolve() .then(() =&gt; &#123;&#125;) .then(value =&gt; console.log('onFulfilled', value)) // onFulfilled undefined 返回了一个一般的值，那么 then() 返回的 promise 将会成为接受（resolved）状态。promise 携带的 value 为返回的值。 123Promise.resolve() .then(() =&gt; 1, () =&gt; 2) .then(value =&gt; console.log('onFulfilled', value)) // onFulfilled 1 抛出一个错误（throw xxx），那么 then() 返回的 promise 将会成为拒绝（rejected）状态。promise 携带的 reason 为抛出的错误。 123456789Promise.resolve() .then(() =&gt; &#123; // 使 .then() 返回一个 rejected promise throw new Error('3') &#125;) .then( () =&gt; console.log('不会调用'), (reason) =&gt; console.log('onRejected', reason) // onRejected Error: 3 ) 返回一个接受（resolved）状态的 promise，那么 then() 返回的 promise 将会成为接受（resolved）状态。then() 返回的 promise 携带的 value 为回调函数返回的 promise 携带的 value。 123Promise.resolve() .then(() =&gt; Promise.resolve(4)) .then(value =&gt; console.log('onFulfilled', value)) // onFulfilled 4 返回一个拒绝（rejected）状态的 promise，那么 then() 返回的 promise 将会成为拒绝（rejected）状态。then() 返回的 promise 携带的 reason 为回调函数返回的 promise 携带的 reason 。 123456Promise.resolve() .then(() =&gt; Promise.reject(5)) .then( () =&gt; console.log('不会调用'), (reason) =&gt; console.log('onRejected', reason) // onRejected 5 ) 返回一个初始（pending）状态的 promise，那么 then() 返回的 promise 将会成为初始（pending）状态。 12345let promise = Promise.resolve().then(() =&gt; ( new Promise(() =&gt; &#123;&#125;)))console.log(promise) // Promise &#123;&lt;pending&gt;&#125; 参考文章 使用 Promise","categories":[{"name":"JavaScript","slug":"JavaScript","permalink":"http://wzw1016.ml/categories/JavaScript/"}],"tags":[{"name":"Promise","slug":"Promise","permalink":"http://wzw1016.ml/tags/Promise/"}]},{"title":"JS中的错误Error与错误处理","slug":"JS中的错误Error与错误处理","date":"2020-02-20T02:51:17.000Z","updated":"2020-02-21T15:35:36.494Z","comments":true,"path":"2020/02/20/JS中的错误Error与错误处理/","link":"","permalink":"http://wzw1016.ml/2020/02/20/JS%E4%B8%AD%E7%9A%84%E9%94%99%E8%AF%AFError%E4%B8%8E%E9%94%99%E8%AF%AF%E5%A4%84%E7%90%86/","excerpt":"Error实例对象Error 是 JavaScript 中的错误类，它同时也是一个构造函数，可以用来创建一个错误对象。Error 的实例会在运行发生错误时抛出，Error 对象像其它对象一样，也可以由用户自定义创建。 12let err = new Error('error message')console.log(err) // Error: error message","text":"Error实例对象Error 是 JavaScript 中的错误类，它同时也是一个构造函数，可以用来创建一个错误对象。Error 的实例会在运行发生错误时抛出，Error 对象像其它对象一样，也可以由用户自定义创建。 12let err = new Error('error message')console.log(err) // Error: error message 语法结构 new Error([message]) message：可选参数，表示出错时的提示信息 。 JavaScript 语言标准只提到，Error 实例对象有 message 属性，没有提到其他属性 。 不同执行引擎对 Error 类的实现有所不同， 大多数 JavaScript 引擎，对 Error 实例还提供 name 和 stack 属性，分别表示错误的名称和错误的堆栈，但它们是非标准的，不是每种实现都有。 name：错误名称（非标准属性） stack：错误的堆栈（非标准属性） 作为函数使用 当像函数一样使用 Error 时 – 如果没有 new，它也会返回一个 Error 对象。也就是说，仅仅调用 Error 将产生与通过 new 关键字构造 Error 输出相同的对象。 1234let err1 = new Error('1')console.log(err1) // Error: 1let err2 = new Error('1')console.log(err2) // Error: 1 Error类的方法与属性方法Error 类本身没有任何方法。但是，由于在 JavaScript 中所有类都是 Object 的子类，所以其会包含一些继承自 Object 类的方法。 属性 Error 类也没有自身定义的类属性，其所有属性据来自于其父类Object。 Error.prototype － 添加到其实例中的属性 Error实例运行时错误实例会由执行引擎自动创建和抛出，我们也可以通过构造函数自定义 Error 实例，与其它类一样我们也可以通过 Error.prototype 向实例中添加属性和方法。 Error 实例包含以下属性或方法： Error.prototype.constructor － 指定对象的构造函数 Error.prototype.message － 错误信息 Error.prototype.name － 错误名 Error.prototype.stack － 错误堆栈信息。该属性是一个非标准属性，但被大多数执行引擎所支持。 Error.prototype.toString() － 表示错误对象的描述信息。继承并重写Object.prototype.toString() Error类型除标准错误对象 Error 外，JavaScript 中还内置了一些类型错误对象。它们会在特殊时刻，或由特定的对象触发。 常用的有： ReferenceError - 引用错误 ReferenceError 错误对象会在无效引用时触发。也可以通过构造函数创建该对象的实例： new ReferenceError([message]) 引用未定义的变量时，会抛出该错误： 1console.log(a) // Uncaught ReferenceError: a is not defined 另一种触发场景是，将一个值分配给无法分配的对象，比如对函数的运行结果或者 this 赋值： 1234567// 等号左侧不是变量console.log() = 1// Uncaught ReferenceError: Invalid left-hand side in assignment// this 对象不能手动赋值this = 1// Uncaught SyntaxError: Invalid left-hand side in assignment TypeError - 类型错误 TypeError 错误会在变量或参数不属于有效类型时触发。也可以通过构造函数创建该对象的实例： new TypeError([message]) 比如，对字符串、布尔值、数值等原始类型的值使用 new 命令，就会抛出这种错误，因为 new 命令的参数应该是一个构造函数： 1234567new 123// Uncaught TypeError: 123 is not a constructornew true// Uncaught TypeError: true is not a constructor··· 或是当调用对象不存在的方法，也会抛出 TypeError 错误，因为obj.unknownMethod的值是undefined，而不是一个函数。 123let obj = &#123;&#125;obj.unknownMethod()// Uncaught TypeError: obj.unknownMethod is not a function SyntaxError - 语法错误SyntaxError 错误对象会在解析代码的过程中发生的语法错误时触发。也可以通过构造函数创建该对象的实例： new SyntaxError([message]) 1234567// 变量名错误let 1a// Uncaught SyntaxError: Invalid or unexpected token// 缺少括号console.log 'hello')// Uncaught SyntaxError: Unexpected string 上面代码的错误，都是在语法解析阶段就可以发现，所以会抛出SyntaxError。第一个错误提示是“token 非法”，第二个错误提示是“字符串不符合要求”。 RangeError - 范围错误RangeError错误对象会在数值变量或参数超出其有效范围时触发。也可以通过构造函数创建该对象的实例： new RangeError([message]) 触发RangeError错误的情况有：对 Array 构造函数使用错误的长度值； 对 Number 对象的方法参数超出范围； 以及函数堆栈超过最大值等。 123456789101112131415// 对 Array 构造函数使用错误的长度值new Array(-1)// Uncaught RangeError: Invalid array length// 对 Number 对象的方法参数超出范围let numObj = 77.1234console.log(numObj.toExponential(101))// Uncaught RangeError: toExponential() argument must be between 0 and 100// 函数堆栈超过最大值function fn() &#123; fn()&#125;fn()// RangeError: Maximum call stack size exceeded 除了这几种常见的的错误类型之外，还有： URIErrorURIError错误会错误使用全局URI函数如 encodeURI()、decodeURI() 等时触发。也可以通过构造函数创建该对象的实例。 该错误类型在目前的 ECMAScript 规范中仍处于草案（Draft）阶段，详情点击。 InternalError InternalError 对象表示出现在 JavaScript 引擎内部的错误。 例如： “InternalError: too much recursion”（内部错误：递归过深）。 该错误类型目前尚未成为规范的一部分。 EvalErrorEvalError对象表示全局函数eval()中发生的错误。 该错误类型已经不再使用了，只是为了保证与以前代码兼容，才继续保留，详情点击。 自定义错误当 JavaScript 内置错误类型不能满足需要时，还可以自定义错误。自定义错误就是继承 Error 对象，并对其进行一定的扩展： 123456function MyError(message) &#123; this.message = message || 'Default Message' this.name = 'MyError'&#125;MyError.prototype = new Error()MyError.prototype.constructor = MyError 接着，我们就可以生成这种自定义类型的错误了： 1new MyError('this is my customizable error') 错误的处理抛出错误 - throw 语句 通常，可以在创建 Error 实例后，通过 throw 关键字抛出： 12throw new Error('go wrong!')// Error: go wrong! 实际上，throw 可以抛出任何类型的值： 12345678910111213141516171819// 抛出一个字符串throw 'Error！'// Uncaught Error！// 抛出一个数值throw 42// Uncaught 42// 抛出一个布尔值throw true// Uncaught true// 抛出一个对象throw &#123; toString: function () &#123; return 'Error!' &#125;&#125;// Uncaught &#123;toString: ƒ&#125; 对于 JavaScript 引擎来说，遇到 throw 语句，程序就中止了。引擎会接收到 throw 抛出的信息，可能是一个错误实例，也可能是其他类型的值。 捕获错误 - try … catch结构 一旦发生错误，程序就中止执行了。 JavaScript提供了 try...catch 结构来捕获和处理错误， 选择是否往下执行。 12345try &#123; throw new Error('go wrong!')&#125; catch (error) &#123; console.log('error.message = ' + error.message)&#125; 上方代码，try 代码块中抛出错误，该错误将立即被 catch 捕获，将该错误作为参数传递给 catch，并执行 catch 中的代码。 也就是说，如果不确定某些代码是否会报错，就可以把它们放在 try...catch 代码块之中，便于进一步对错误进行处理。 catch 代码块捕获错误之后，程序不会中断，会按照正常流程继续执行下去。 try...catch 可以嵌套使用。 finally代码块可以在 try...catch 结构最后添加一个 finally 代码块，表示不管是否出现错误，都必需在最后运行的语句。 如下代码，就是一个使用 try...catch...finally 的经典场景。 1234567891011function openFile() &#123; try &#123; writeFile(data) // 将可能出错的写入文件放入try代码块中 &#125; catch (err) &#123; handleError(err) // 如果在写入文件过程中出现错误，将在此处理 &#125; finally &#123; closeFile() // 总是会关闭文件 &#125;&#125; 即使在 try 和 catch 的代码块中存在 return 语句，finally 中的代码依然会执行。 如下代码： 1234567891011121314function still(a) &#123; try &#123; console.log(a) return 'result' &#125; finally &#123; console.log('FINALLY') &#125;&#125;console.log(still('test'))// test// FINALLY// result 从阮一峰老师的博客中可以看到： 在 try 或 catch 中，return 语句的执行是排在 finally 代码之前的，只是等 finally 代码执行完毕后才返回。 代码如下： 1234567891011121314let count = 0function countUp() &#123; try &#123; return count &#125; finally &#123; count++ &#125;&#125;console.log(countUp())// 0console.log(count)// 1 上面的代码中可以看到，countUp() 的返回值 count 先被确定为 0，但是此时并没有直接返回，而是先执行 finally 代码块中的内容。 finall 代码块中的 return 语句会覆盖掉在 try 或 catch 中的 return。也就是说， 如果 finall 代码块中存在 return，那么该条 return语句中的值将作为 try...catch...finally 的返回值。 12345678910111213function test() &#123; try &#123; console.log(1); return 'from_try'; &#125; catch (e) &#123; // TODO &#125; finally &#123; console.log(2); return 'from_finally'; &#125;&#125; 参考文章 MDN —— Error Standard ECMA-262 6th Edition / June 2015 ECMAScript® 2015 Language Specification 阮一峰的网络日志 —— 错误处理机制 IT笔录 —— JavaScript Error对象及错误类型","categories":[{"name":"JavaScript","slug":"JavaScript","permalink":"http://wzw1016.ml/categories/JavaScript/"}],"tags":[]},{"title":"详解state与setState","slug":"详解state与setState","date":"2020-02-15T06:25:22.000Z","updated":"2020-02-16T16:40:29.609Z","comments":true,"path":"2020/02/15/详解state与setState/","link":"","permalink":"http://wzw1016.ml/2020/02/15/%E8%AF%A6%E8%A7%A3state%E4%B8%8EsetState/","excerpt":"前言 本文参考了一些资料，逐一通过例子对 state 和 setState() 进行梳理、总结，并在此记录。 使用过 react 的小伙伴都知道， React 把组件看成是一个状态机（State Machines）。通过与用户的交互，实现不同状态，然后渲染 UI，让用户界面和数据保持一致。 而 setState() 是 react 中的一个非常重要的方法。当我们调用 setState() 的时候，react 会更新组件的状态 state，并且自动重新调用 render 方法，然后再把 render 方法所渲染的最新的内容显示到页面上。","text":"前言 本文参考了一些资料，逐一通过例子对 state 和 setState() 进行梳理、总结，并在此记录。 使用过 react 的小伙伴都知道， React 把组件看成是一个状态机（State Machines）。通过与用户的交互，实现不同状态，然后渲染 UI，让用户界面和数据保持一致。 而 setState() 是 react 中的一个非常重要的方法。当我们调用 setState() 的时候，react 会更新组件的状态 state，并且自动重新调用 render 方法，然后再把 render 方法所渲染的最新的内容显示到页面上。 state 一个组件的显示形态是可以由它数据状态和配置参数决定的。一个组件可以拥有自己的状态， react 的 state 就是用来存储这种可变化的状态的。 以下方这个 Counter 计数器为例： 12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758596061626364import React, &#123; Component &#125; from 'react'import ReactDOM from 'react-dom'class Counter extends React.Component &#123; state = &#123; count: 0 &#125; // 点击按钮 'A 测试1', count数量加1 test1 = () =&gt; &#123; this.setState(&#123; count: 3 &#125;) // 调用对象形式的setState()更新状态 console.log('setState()之后', this.state.count) &#125; // 点击按钮 'A 测试2', count数量加1 test2 = () =&gt; &#123; this.setState(state =&gt; (&#123; // 调用函数形式的setState()更新状态 count: state.count + 1 &#125;)) console.log('setState()2之后', this.state.count) &#125; // 点击按钮 'A 测试3', 调用带回调函数的setState() test3 = () =&gt; &#123; this.setState( state =&gt; (&#123; count: state.count + 1 &#125;), () =&gt; &#123;// 状态数据更新且界面更新后立即执行 console.log('在callback中', this.state.count) &#125; ) &#125; // 点击按钮 'A 测试4', 调用两次参数为对象形式的setState() test4 = () =&gt; &#123; this.setState(&#123; count: this.state.count + 1 &#125;) this.setState(&#123; count: this.state.count + 1 &#125;) console.log('setState()4之后', this.state.count) &#125; // 点击按钮 'A 测试5', 调用两次参数为函数形式的setState() test5 = () =&gt; &#123; this.setState(state =&gt; (&#123; count: state.count + 1 &#125;)) this.setState(state =&gt; (&#123; count: state.count + 1 &#125;)) console.log('setState()5之后', this.state.count) &#125; render() &#123; console.log('A render()', this.state.count) return ( &lt;div&gt; &lt;h1&gt;A组件: &#123;this.state.count&#125;&lt;/h1&gt; &lt;button onClick=&#123;this.test1&#125;&gt;A 测试1&lt;/button&gt; &amp;nbsp;&amp;nbsp; &lt;button onClick=&#123;this.test2&#125;&gt;A 测试2&lt;/button&gt; &amp;nbsp;&amp;nbsp; &lt;button onClick=&#123;this.test3&#125;&gt;A 测试3&lt;/button&gt; &amp;nbsp;&amp;nbsp; &lt;button onClick=&#123;this.test4&#125;&gt;A 测试4&lt;/button&gt; &amp;nbsp;&amp;nbsp; &lt;button onClick=&#123;this.test5&#125;&gt;A 测试5&lt;/button&gt; &amp;nbsp;&amp;nbsp; &lt;/div&gt; ) &#125;&#125;ReactDOM.render(&lt;Counter /&gt;, document.getElementById('root')) 上面代码是一个 Counter 组件，count 存放在的实例的 state 对象当中，这个对象在构造函数里面初始化。这个组件的 render 函数内，会根据组件的 state 的中的 count 值的变化而对应显示。 注意 当我们要改变组件的状态的时候，不能直接用 this.state = xxx 这种方式来修改，如果这样做 React 就没办法知道你修改了组件的状态，它也就没有办法更新页面。所以，一定要使用 React 提供的 setState 方法，它接受一个函数或者对象作为参数。 例如，此代码不会重新渲染组件： 12// Wrongthis.state.count = 1 而是应该使用 setState(): 12// Correctthis.setState(&#123;count: 1&#125;) setState()的基本用法setState() 更新状态的两种用法 setState(stateChange[, callback]) —— 接收的第一个参数为对象 stateChange 为一个对象， 这个对象表示该组件的新状态。但你只需要传入需要更新的部分，而不需要传入整个对象 。 stateChange 会将传入的对象浅层合并到新的 state 中 12345678···test1 = () =&gt; &#123; this.setState(&#123;count: this.state.count + 1&#125;) console.log('setState()2之后', this.state.count)&#125;··· 以上方这个组件 Counter 为例，点击按钮 A 测试1，调用函数 test1，控制台输出以下内容： 12&gt; setState()之后 0&gt; A render() 1 我们可以看出，这种形式的setState()是异步的。 setState(updater[, callback]) —— 接收的第一个参数为函数 updater 为返回值为 stateChange对象的函数：(state, props) =&gt; stateChange。React 会把上一个 setState 的结果传入这个函数作为第一个参数， 将此次更新被应用时的 props 做为第二个参数 。即：updater 函数中 接收的参数 state 和 props 的值永远被保证为最新的。并且，updater 的返回值会与 state 进行浅合并。 12345678910···test2 = () =&gt; &#123; this.setState(state =&gt; (&#123; count: state.count + 1 &#125;)) console.log('setState()之后', this.state.count)&#125;··· 以组件 Counter 为例，点击按钮 A 测试2，调用函数 test2，控制台输出以下内容： 12&gt; setState()2之后 0&gt; A render() 1 这种形式的setState()也是异步的。 setState(param, callback) —— 带回调函数的setState() callback 是可选的回调函数, 它将在 setState 完成合并并重新渲染组件后执行 。 123456789101112···test3 = () =&gt; &#123; this.setState( state =&gt; (&#123;count: state.count + 1&#125;), () =&gt; &#123; console.log('在callback中', this.state.count) &#125; )&#125;··· 以组件 Counter 为例，点击按钮 A 测试3，调用函数 test3，控制台输出以下内容： 12&gt; A render() 1&gt; 在callback中 1 此时可以获取到 setState() 后最新的状态数据。 注意： 关于 setState() 的第二个参数为可选的回调函数，React官方文档中是这样描述的： 通常，我们建议使用 componentDidUpdate() 来代替此方式。 结论： 如果后续状态不依赖于当前状态 ===&gt; 使用对象方式 如果后续状态依赖于当前状态 ===&gt; 使用函数方式 setState()真的是异步的吗？在上面的代码中，我们可以看到，在此时的场景中，对象参数形式 和 函数参数形式 的 setState()都是异步的。那么， setState() 真的是异步的吗？ 先给出结论： 由 React 控制的事件处理过程中的 setState 都是异步的，如：生命周期函数、合成事件 由非 React 控制的事件处理过程中的 setState 都是同步的，如：定时器回调中、原生事件监听回调中、promise成功/失败的回调中 …… 例子：接下来我们用几个例子验证一下： 生命周期函数中的 setState()12345678910111213141516171819class Counter extends Component &#123; state = &#123;count: 0&#125; componentDidMount() &#123; console.log('setState()之前', this.state.count) this.setState(&#123; count: this.state.count + 1 &#125;) console.log('setState()之后', this.state.count) &#125; render() &#123; console.log('render()', this.state.count) return ( &lt;div&gt; &#123;`Counter is: $&#123;this.state.count&#125;`&#125; &lt;/div&gt; ) &#125;&#125; 输出顺序如下： 1234&gt; render() 0&gt; setState()之前 0&gt; setState()之后 0&gt; render() 1 结果显而易见，setState() 此时是异步执行的。 合成事件中的 setState() 首先得了解一下什么是合成事件，react为了解决跨平台，兼容性问题，自己封装了一套事件机制，代理了原生的事件，像在 jsx 中常见的 onClick 、onChange 这些都是合成事件。 12345678910111213141516171819class Counter extends Component &#123; state = &#123;count: 0&#125; increment = () =&gt; &#123; console.log('setState()之前', this.state.count) this.setState(&#123; count: this.state.count + 1 &#125;) console.log('setState()之后', this.state.count) &#125; render() &#123; console.log('render()', this.state.count) return ( &lt;div onClick=&#123;this.increment&#125;&gt; &#123;`Counter is: $&#123;this.state.count&#125;`&#125; &lt;/div&gt; ) &#125;&#125; 点击调用，输出顺序如下： 1234&gt; render() 0&gt; setState()之前 0&gt; setState()之后 0&gt; render() 1 setState() 此时也是异步执行的。 定时器中的 setState()首先得了解一下什么是合成事件，react为了解决跨平台，兼容性问题，自己封装了一套事件机制，代理了原生的事件，像在 jsx 中常见的 onClick 、onChange 这些都是合成事件。 123456789101112131415161718192021class Counter extends Component &#123; state = &#123;count: 0&#125; componentDidMount() &#123; setTimeout(() =&gt; &#123; console.log('setState()之前', this.state.count) this.setState(&#123; count: this.state.count + 1 &#125;) console.log('setState()之后', this.state.count) &#125;, 0) &#125; render() &#123; console.log('render()', this.state.count) return ( &lt;div&gt; &#123;`Counter is: $&#123;this.state.count&#125;`&#125; &lt;/div&gt; ) &#125;&#125; 输出顺序如下： 1234&gt; render() 0&gt; setState()之前 0&gt; render() 1&gt; setState()之后 1 此时，setState() 此时是同步执行的。 在定时器中去 setState() 并不算是一个单独的场景，它是随着你外层去决定的。你可以在合成事件中使用定时器，可以在钩子函数中使用定时器 ，也可以在原生事件使用定时器，但是不管是哪个场景下，基于事件轮询机制（event loop）下， 定时器中的 setState() 永远是同步执行的。 原生事件监听回调中的 setState() 原生事件是指非 react 合成事件，原生自带的事件监听 addEventListener ，或者也可以用原生js、jq直接 document.querySelector().onclick 这种绑定事件的形式都属于原生事件。 1234567891011121314151617181920212223class App extends Component &#123; state = &#123; count: 0 &#125; changeValue = () =&gt; &#123; console.log('setState()之前', this.state.count) this.setState(&#123; count: this.state.count + 1 &#125;) console.log('setState()之后', this.state.count) &#125; componentDidMount() &#123; document.body.addEventListener('click', this.changeValue) &#125; render() &#123; console.log('render()', this.state.count) return ( &lt;div&gt; &#123;`Counter is: $&#123;this.state.count&#125;`&#125; &lt;/div&gt; ) &#125;&#125; 点击调用，输出顺序如下： 1234&gt; render() 0&gt; setState()之前 0&gt; render() 1&gt; setState()之后 1 此时的setState() 此时也是同步执行的。 promise回调中的 setState()123456789101112131415161718192021class App extends Component &#123; state = &#123; count: 0 &#125; componentDidMount() &#123; Promise.resolve().then(() =&gt; &#123; console.log('setState()之前', this.state.count) this.setState(&#123; count: this.state.count + 1 &#125;) console.log('setState()之后', this.state.count) &#125;) &#125; render() &#123; console.log('render()', this.state.count) return ( &lt;div&gt; &#123;`Counter is: $&#123;this.state.count&#125;`&#125; &lt;/div&gt; ) &#125;&#125; 输出顺序如下： 1234&gt; render() 0&gt; setState()之前 0&gt; render() 1&gt; setState()之后 1 此时的setState() 此时也是同步执行的。 这里， promise 回调中的 setState()，和之前所说的一样，不管是哪个场景下，promise 回调中的 setState() 永远是同步执行的。 同步/异步 是由什么决定的呢？深入源码你会发现：引自参考文章 6 在 React 的 setState 函数实现中，会根据一个变量 isBatchingUpdates 判断是直接更新 this.state 还是放到队列中回头再说，而 isBatchingUpdates 默认是 false，也就表示 setState 会同步更新 this.state，但是，有一个函数 batchedUpdates，这个函数会把 isBatchingUpdates 修改为 true，而当 React 在调用事件处理函数之前就会调用这个 batchedUpdates，造成的后果，就是由 React 控制的事件处理过程 setState 不会同步更新 this.state。 关于异步的setState()的批量处理例：123456789···test4 = () =&gt; &#123; this.setState(&#123;count: this.state.count + 1&#125;) this.setState(&#123;count: this.state.count + 1&#125;) console.log('setState()4之后', this.state.count)&#125;··· 以组件 Counter 为例，点击按钮 A 测试4，调用函数 test4，控制台输出以下内容： 12&gt; setState()4之后 0&gt; A render() 1 同一周期内会对多个 setState 进行批量处理。例如，如果在同一周期内多次设置 count 增加，则相当于： 123456Object.assign( previousState, &#123;count: this.state.count + 1&#125;, &#123;count: this.state.count + 1&#125;, ...) 后调用的 setState() 将覆盖同一周期内先调用 setState 的值，因此 count 得值仅增加一次， 如果后续状态取决于当前状态，建议使用 updater 函数的形式代替： 12345test5 = () =&gt; &#123; this.setState(state =&gt; (&#123;count: state.count + 1&#125;)) this.setState(state =&gt; (&#123;count: state.count + 1&#125;)) console.log('setState()5之后', this.state.count)&#125; 由于接收的参数 state 和 props 的值永远被保证为最新的，所以输出以下结果： 12&gt; setState()5之后 0&gt; A render() 2 多次调用, 如何处理? setState({}): 合并更新一次状态, 只调用一次 render() 更新界面 ===&gt; 状态更新和界面更新都合并了。 setState(fn): 更新多次状态, 但只调用一次 render() 更新界面 ===&gt; 状态更新没有合并, 但界面更新合并了。 结论：由于 React 会对同一周期内的 setState() 进行合并，所以， 在使用 React 的时候，并不需要担心多次进行 setState 会带来性能问题 结语掌握 setState() 的基本用法，分清 setState() 在不同应用场景下的执行流程，注意 setState() 的合并处理。开发中基本不会再跳这个方法的坑了。 如果哪里有说的不对的地方，欢迎指正。 参考文章 React官方文档 —— setState() 阮一峰的网络日志 —— React 入门实例教程 React.js 小书 —— 组件的 state 和 setState 菜鸟教程 —— React State(状态) 你真的理解setState吗？ 问一个react更新State的问题？ - Lucas HC的回答 - 知乎","categories":[{"name":"React","slug":"React","permalink":"http://wzw1016.ml/categories/React/"}],"tags":[]},{"title":"Component和PureComponent","slug":"Component和PureComponent","date":"2020-02-14T15:31:13.000Z","updated":"2020-02-19T14:03:23.587Z","comments":true,"path":"2020/02/14/Component和PureComponent/","link":"","permalink":"http://wzw1016.ml/2020/02/14/Component%E5%92%8CPureComponent/","excerpt":"React.PureComponent 与 React.Component 很相似。两者的区别在于 React.Component 并未实现 shouldComponentUpdate()，而 React.PureComponent 中以浅层对比 prop 和 state 的方式来实现了该函数。","text":"React.PureComponent 与 React.Component 很相似。两者的区别在于 React.Component 并未实现 shouldComponentUpdate()，而 React.PureComponent 中以浅层对比 prop 和 state 的方式来实现了该函数。 使用Component存在的问题例我们先来看看下面这段代码： 1234567891011121314151617181920212223242526272829303132333435363738394041424344454647&#x2F;&#x2F; 父组件class A extends React.Component &#123; state &#x3D; &#123; m1: &#123; count: 1 &#125; &#125; testA &#x3D; () &#x3D;&gt; &#123; this.setState(&#123;&#125;) &#125; render() &#123; console.log(&#39;A render()&#39;) return ( &lt;div&gt; &lt;h1&gt;A组件: m1.count&#x3D;&#123;this.state.m1.count&#125;&lt;&#x2F;h1&gt; &lt;button onClick&#x3D;&#123;this.testA&#125;&gt;test A&lt;&#x2F;button&gt; &lt;B m1&#x3D;&#123;this.state.m1&#125;&#x2F;&gt; &lt;&#x2F;div&gt; ) &#125;&#125;&#x2F;&#x2F; 子组件class B extends React.Component &#123; state &#x3D; &#123; m2: &#123; count: 2 &#125; &#125; render() &#123; console.log(&#39;B render()&#39;) return ( &lt;div&gt; &lt;h1&gt;B组件: &lt;&#x2F;h1&gt; &lt;div&gt;m2.count&#x3D;&#123;this.state.m2.count&#125;&lt;&#x2F;div&gt; &lt;div&gt;m1.count&#x3D;&#123;this.props.m1.count&#125;&lt;&#x2F;div&gt; &lt;&#x2F;div&gt; ) &#125;&#125;ReactDOM.render(&lt;A&#x2F;&gt;, document.getElementById(&#39;example&#39;)) 上面的代码中，组件A是组件B的父组件。同时，组件A将维护的状态 m1 作为B组件的属性传递给他。 点击 test A，输出以下内容： 12&gt; A render()&gt; B render() 我们会发现，此时，即使 A组件 的 state 没有发生变化，A组件也会重新渲染。即使 B组件 的 state 和 props 都没有发生改变，但只要 A组件 重新渲染，B组件 也会重新渲染。 也就是说，当前使用的继承类 Component 存在这两个问题： 当前组件 setState()，会重新执行 render()，即使 state 没有任何变化。 父组件重新 render(), 当前组件也会重新执行 render(), 即使 state 和 porps 没有任何变化。 这样，就导致了本不必要的性能浪费。 为什么会存在这些问题？首先我们来看一下 React 的生命周期： 图源来自网络 从这张图中可以很轻松的看到，组件运行时，无论是父组件重新 render()，还是子组件的 state 发生改变，都会调用 shouldComponentUpdate() 这个方法。 它接收两个参数：nextProps和nextState，分别表示新的 props 和新的 state 的值。并且，当函数返回 ture 时，组件会重新调用 render() 进行 update ；当函数返回 false 时，组件不会重新渲染。 然而，Component 类的 shouldComponentUpdate() 默认返回 true, 即使数据没有变化 render() 也会重新执行，这就导致了我们上方的问题。 解决办法重写shouldComponentUpdate()上面我们说，shouldComponentUpdate() 默认返回 true，所以导致了不必要的重新渲染。于是我们可以在shouldComponentUpdate()中加入条件判断，从而优化性能。 在上面的例子中，我们在 12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455&#x2F;&#x2F; 父组件class A extends React.Component &#123; state &#x3D; &#123; m1: &#123; count: 1 &#125; &#125; testA &#x3D; () &#x3D;&gt; &#123; this.setState(&#123;&#125;) &#125; shouldComponentUpdate(nextProps, nextState)&#123; return nextState.m1 &#x3D;&#x3D;&#x3D; this.state.m1 ? false : true &#125; render() &#123; console.log(&#39;A render()&#39;) return ( &lt;div&gt; &lt;h1&gt;A组件: m1.count&#x3D;&#123;this.state.m1.count&#125;&lt;&#x2F;h1&gt; &lt;button onClick&#x3D;&#123;this.testA&#125;&gt;test A&lt;&#x2F;button&gt; &lt;B m1&#x3D;&#123;this.state.m1&#125;&#x2F;&gt; &lt;&#x2F;div&gt; ) &#125;&#125;&#x2F;&#x2F; 子组件class B extends React.Component &#123; state &#x3D; &#123; m2: &#123; count: 2 &#125; &#125; shouldComponentUpdate(nextProps, nextState)&#123; return nextProps.m1 &#x3D;&#x3D;&#x3D; this.props.m1 &amp;&amp; nextState.m2 &#x3D;&#x3D;&#x3D; this.state.m2 ? false : true &#125; render() &#123; console.log(&#39;B render()&#39;) return ( &lt;div&gt; &lt;h1&gt;B组件: &lt;&#x2F;h1&gt; &lt;div&gt;m2.count&#x3D;&#123;this.state.m2.count&#125;&lt;&#x2F;div&gt; &lt;div&gt;m1.count&#x3D;&#123;this.props.m1.count&#125;&lt;&#x2F;div&gt; &lt;&#x2F;div&gt; ) &#125;&#125;ReactDOM.render(&lt;A&#x2F;&gt;, document.getElementById(&#39;example&#39;)) 可是这样，又有了一个新的问题。当组件的 state 或 props 很多时，这样无疑会非常麻烦。 所以，我们可以使用 PureComponent 很轻松的解决。 使用PureComponent React中提供了一个 PureComponent 的类，当我们的组件继承于它时，组件更新时就会默认先比较新旧属性和状态，从而决定组件是否更新。 不过值得注意的是，PureComponent进行的是浅比较，所以组件状态或属性改变时，都需要返回一个新的对象或数组。 就像这样： 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657&#x2F;&#x2F; 父组件class A extends React.PureComponent &#123; state &#x3D; &#123; m1: &#123; count: 1 &#125; &#125; testA &#x3D; () &#x3D;&gt; &#123; this.setState(state &#x3D;&gt; (&#123; m1: &#123;...state.m1, count: 2&#125; &#125;)) &#125; shouldComponentUpdate(nextProps, nextState)&#123; return nextState.m1 &#x3D;&#x3D;&#x3D; this.state.m1 ? false : true &#125; render() &#123; console.log(&#39;A render()&#39;) return ( &lt;div&gt; &lt;h1&gt;A组件: m1.count&#x3D;&#123;this.state.m1.count&#125;&lt;&#x2F;h1&gt; &lt;button onClick&#x3D;&#123;this.testA&#125;&gt;test A&lt;&#x2F;button&gt; &lt;B m1&#x3D;&#123;this.state.m1&#125;&#x2F;&gt; &lt;&#x2F;div&gt; ) &#125;&#125;&#x2F;&#x2F; 子组件class B extends React.PureComponent &#123; state &#x3D; &#123; m2: &#123; count: 2 &#125; &#125; shouldComponentUpdate(nextProps, nextState)&#123; return nextProps.m1 &#x3D;&#x3D;&#x3D; this.props.m1 &amp;&amp; nextState.m2 &#x3D;&#x3D;&#x3D; this.state.m2 ? false : true &#125; render() &#123; console.log(&#39;B render()&#39;) return ( &lt;div&gt; &lt;h1&gt;B组件: &lt;&#x2F;h1&gt; &lt;div&gt;m2.count&#x3D;&#123;this.state.m2.count&#125;&lt;&#x2F;div&gt; &lt;div&gt;m1.count&#x3D;&#123;this.props.m1.count&#125;&lt;&#x2F;div&gt; &lt;&#x2F;div&gt; ) &#125;&#125;ReactDOM.render(&lt;A&#x2F;&gt;, document.getElementById(&#39;example&#39;)) 参考文章 React官方文档 —— React.PureComponent","categories":[{"name":"React","slug":"React","permalink":"http://wzw1016.ml/categories/React/"}],"tags":[{"name":"性能优化","slug":"性能优化","permalink":"http://wzw1016.ml/tags/%E6%80%A7%E8%83%BD%E4%BC%98%E5%8C%96/"}]},{"title":"同步回调与异步回调","slug":"同步回调与异步回调","date":"2020-02-06T07:11:09.000Z","updated":"2020-02-22T06:18:37.912Z","comments":true,"path":"2020/02/06/同步回调与异步回调/","link":"","permalink":"http://wzw1016.ml/2020/02/06/%E5%90%8C%E6%AD%A5%E5%9B%9E%E8%B0%83%E4%B8%8E%E5%BC%82%E6%AD%A5%E5%9B%9E%E8%B0%83/","excerpt":"前言 对js回调函数进行归纳总结 涉及的名词：单线程、回调函数","text":"前言 对js回调函数进行归纳总结 涉及的名词：单线程、回调函数 知识准备js是单线程的什么是单线程？所谓“单线程”，就是同一时间只能处理一个任务，如果有多个任务，就必须依次执行。只有当前一个任务执行完了，后一个任务才会执行。 1234(() =&gt; &#123; alert('1') console.log('2')&#125;)() 执行上面的代码，执行顺序： 页面弹窗显示1，此时控制台没有内容。 点击弹窗确定，控制台输出2。 即console.log(&#39;2&#39;)这条语句会在alert(&#39;1&#39;)执行结束后才开始执行 为什么JavaScript是单线程？JavaScript的单线程，与它的用途有关。作为浏览器脚本语言，JavaScript的主要用途是与用户互动，以及操作DOM。这决定了它只能是单线程，否则会带来很复杂的同步问题。比如，假定JavaScript同时有两个线程，一个线程在某个DOM节点上添加内容，另一个线程删除了这个节点，这时浏览器应该以哪个线程为准？ 所以，为了避免复杂性，从一诞生，JavaScript就是单线程。 回调函数回调函数是什么？MDN对回调函数的定义： 被作为实参传入另一函数，并在该外部函数内被调用，用以来完成某些任务的函数，称为回调函数 。 想要弄清楚回调函数，首先要清楚js中的函数，JavaScript中的函数本质是一个对象，准确来说是通过new Function()创建的Function的实例对象。因此我们可以将函数像对象一样存保存在变量中，当然也就可以将保存在变量中的函数通过参数传递给另一个函数，这个作为参数传递的函数，就是回调函数。 1234const fn = (a) =&gt; &#123; console.log(a)&#125;setTimeOut(fn(1), 1000) 为什么使用回调函数？js的单线程特性，使得所有任务需依次执行，如果前一个任务的执行需要很长时间，那么整个程序的执行时间就都会被拉长。 为了解决这个问题，Javascript语言将任务的执行模式分成两种：同步（Synchronous）和异步（Asynchronous） 。 同步任务指的是需要在主线程上排队依次执行的任务，前一个任务结束，才会执行后一个任务。 任务执行的顺序与代码排列的顺序是一致的、同步的，同步任务会导致阻塞；异步任务指的是不会阻塞主线程上的下一个同步任务，而是会进入的回调队列（callback queue）的任务。 而回调函数，正是实现异步编程的方法之一。 同步回调与异步回调回调函数不等于异步， 同步(阻塞)的场景下也经常用到回调 同步回调立即执行，完全执行完了才会执行下一个任务，不会放入回调队列中 如：数组遍历相关的回调函数 / Promise的excutor函数 例： 12345const arr = [1, 2, 3]arr.forEach((item, index) =&gt; &#123; console.log('遍历的回调', item, index)&#125;)console.log('forEach()之后') 数组的forEach()方法 1234// 遍历的回调, 1, 0// 遍历的回调, 2, 1// 遍历的回调, 3, 2// forEach()之后 执行结果 异步回调不会立即执行, 会放入回调队列中将来执行 如：定时器回调 / ajax回调 / 事件监听回调/ Promise的成功和失败的回调 例： 1234setTimeout(() =&gt; &#123; console.log('回调函数')&#125;, 0)console.log('setTimeout()之后') 定时器回调 12// setTimeout()之后// 回调函数 执行结果 参考文章 JavaScript 运行机制详解：再谈Event Loop Javascript异步编程的4种方法","categories":[{"name":"JavaScript","slug":"JavaScript","permalink":"http://wzw1016.ml/categories/JavaScript/"}],"tags":[{"name":"回调函数","slug":"回调函数","permalink":"http://wzw1016.ml/tags/%E5%9B%9E%E8%B0%83%E5%87%BD%E6%95%B0/"}]}]}